
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o ES4_Lab_7_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ES4_Lab_7_impl_1.udb 
// Netlist created on Sat Dec  2 17:30:16 2023
// Netlist written on Sat Dec  2 17:30:20 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module master ( ctrlr_data, test_input, osc, rotate_out, test_output, 
                ctrlr_clk, ctrlr_latch, clk_test, vsync, hsync, rgb );
  input  ctrlr_data, test_input, osc;
  output rotate_out, test_output, ctrlr_clk, ctrlr_latch, clk_test, vsync, 
         hsync;
  output [5:0] rgb;
  wire   \my_vga.col_9__N_31[8] , \my_vga.col_9__N_31[7] , \my_vga.n2828 , 
         \col[8] , \my_vga.n1887 , \col[7] , \my_vga.col_0__N_50 , outglobal_o, 
         \my_vga.n1889 , \my_vga.col_9__N_31[6] , \my_vga.col_9__N_31[5] , 
         \my_vga.n2825 , \col[6] , \my_vga.n1885 , \col[5] , 
         \my_vga.col_9__N_31[4] , \my_vga.col_9__N_31[3] , \my_vga.n2822 , 
         \col[4] , \my_vga.n1883 , \my_vga.col[3]_2 , \my_vga.col_9__N_31[2] , 
         \my_vga.col_9__N_31[1] , \my_vga.n2819 , \my_vga.col[2]_2 , 
         \my_vga.n1881 , \my_vga.col[1]_2 , \my_vga.col_9__N_31[0] , 
         \my_vga.n2798 , \my_vga.col[0]_2 , \rotate_out_pad.vcc , 
         \my_vga.row_9__N_1[9] , \my_vga.n2816 , \my_vga.n1878 , \row[9] , 
         \my_vga.row_0__N_30 , \my_vga.row_9__N_1[8] , \my_vga.row_9__N_1[7] , 
         \my_vga.n2810 , \row[8] , \my_vga.n1876 , \row[7] , 
         \my_vga.row_9__N_1[6] , \my_vga.row_9__N_1[5] , \my_vga.n2804 , 
         \row[6] , \my_vga.n1874 , \row[5] , \my_vga.row_9__N_1[4] , 
         \my_vga.row_9__N_1[3] , \my_vga.n2795 , \row[4] , \my_vga.n1872 , 
         \row[3] , \my_vga.row_9__N_1[2] , \my_vga.row_9__N_1[1] , 
         \my_vga.n2783 , \row[2] , \my_vga.n1870 , \row[1] , 
         \my_vga.row_9__N_1[0] , \my_vga.n2780 , \row[0] , 
         \my_vga.col_9__N_31[9] , \my_vga.n2831 , \col[9] , 
         \clock_device.NEScount_7__N_51[14] , 
         \clock_device.NEScount_7__N_51[13] , \clock_device.n2852 , 
         \clock_device.NEScount[6] , \clock_device.n1865 , 
         \clock_device.NEScount[5] , \clock_device.n1867 , 
         \clock_device.NEScount_7__N_51[12] , 
         \clock_device.NEScount_7__N_51[11] , \clock_device.n2849 , 
         \clock_device.NEScount[4] , \clock_device.n1863 , \NEScount[3] , 
         \clock_device.NEScount_7__N_51[6] , 
         \clock_device.NEScount_7__N_51[5] , \clock_device.n2840 , 
         \clock_device.n10 , \clock_device.n1857 , \clock_device.n11 , 
         \clock_device.n1859 , \clock_device.NEScount_7__N_51[8] , 
         \clock_device.NEScount_7__N_51[7] , \clock_device.n2843 , 
         \NEScount[0] , \clock_device.NESclk , \clock_device.n1861 , 
         \clock_device.NEScount_7__N_51[2] , 
         \clock_device.NEScount_7__N_51[1] , \clock_device.n2834 , 
         \clock_device.n14 , \clock_device.n1853 , \clock_device.n15 , 
         \clock_device.n1855 , \clock_device.NEScount_7__N_51[15] , 
         \clock_device.n2855 , \clock_device.NEScount[7] , 
         \clock_device.NEScount_7__N_51[10] , 
         \clock_device.NEScount_7__N_51[9] , \clock_device.n2846 , 
         \NEScount[2] , \NEScount[1] , \clock_device.NEScount_7__N_51[4] , 
         \clock_device.NEScount_7__N_51[3] , \clock_device.n2837 , 
         \clock_device.n12 , \clock_device.n13 , 
         \clock_device.NEScount_7__N_51[0] , \clock_device.n2813 , 
         \clock_device.n16 , \my_pattern_gen.n2807 , 
         \my_pattern_gen.frame_counter[2] , \my_pattern_gen.n1892 , 
         \my_pattern_gen.n2 , \my_pattern_gen.frame_counter_2__N_143[1] , 
         \my_pattern_gen.frame_counter_2__N_143[2] , \my_pattern_gen.n2801 , 
         \my_pattern_gen.n3 , n146, \my_pattern_gen.frame_counter_2__N_143[0] , 
         \my_nes_controller.shift_reg[1].sig_001.FeedThruLUT , 
         \my_nes_controller.shift_reg[2].sig_000.FeedThruLUT , 
         \my_nes_controller.shift_reg[1] , \my_nes_controller.shift_reg[2] , 
         ctrlr_clk_c, \my_nes_controller.shift_reg[3] , 
         \my_nes_controller.shift_reg_0__N_155 , 
         \my_nes_controller.shift_reg[0].sig_002.FeedThruLUT , ctrlr_data_c, 
         \my_nes_controller.shift_reg[0] , 
         \my_pattern_gen.rotate_delay_1__N_150 , 
         \my_pattern_gen.rotate_delay_2__N_149[0] , 
         \my_pattern_gen.rotate_delay[1] , \my_pattern_gen.rotate_delay[0] , 
         \my_pattern_gen.n5_adj_174 , \my_pattern_gen.n147 , 
         \my_pattern_gen.down_delay_1__N_153 , 
         \my_pattern_gen.down_delay_2__N_152[0] , 
         \my_pattern_gen.down_delay[1] , \my_pattern_gen.down_delay[0] , 
         \my_pattern_gen.n5 , 
         \my_pattern_gen.frame_counter_2__N_143[1].sig_004.FeedThruLUT , 
         \my_pattern_gen.frame_counter_2__N_143[0].sig_003.FeedThruLUT , 
         \my_pattern_gen.frame_counter_2__N_142.sig_005.FeedThruLUT , 
         \my_pattern_gen.curr_piece_shape_15__N_64[0]$n2 , 
         \my_pattern_gen.curr_piece_shape_15__N_64[1]$n1 , 
         \my_pattern_gen.n274[0] , \my_pattern_gen.piece_code[0] , 
         \my_pattern_gen.piece_code[1] , 
         \my_pattern_gen.curr_piece_shape_15__N_62[0]$n4 , 
         \my_pattern_gen.curr_piece_shape_15__N_62[1]$n3 , 
         \my_pattern_gen.n231 , \my_pattern_gen.piece_rotation[0] , 
         \my_pattern_gen.piece_rotation[1] , \my_pattern_gen.n2275 , 
         down_button, \my_nes_controller.down_button_N_172 , 
         \my_pattern_gen.n2285 , rotate_out_c, \my_vga.vsync_c_N_167 , 
         \my_vga.vsync_c_N_166 , vsync_c, \my_pattern_gen.n2392 , 
         \my_pattern_gen.n1[1] , \my_pattern_gen.n2391 , 
         \my_pattern_gen.n1[2] , \my_pattern_gen.n2576 , 
         \my_pattern_gen.n2383 , \my_pattern_gen.n2382 , 
         \my_pattern_gen.curr_piece_shape[3] , 
         \my_pattern_gen.curr_piece_shape[2] , n2579, ctrlr_clk_c_N_170, 
         \my_nes_controller.n6 , \my_vga.n98 , \my_vga.n120 , 
         \my_pattern_gen.rgb_c_0_N_163 , rgb_c_0_N_162, \my_vga.hsync_c_N_164 , 
         \my_vga.n1339 , rgb_c_0, \my_vga.n8_adj_179 , n117, 
         \my_pattern_gen.rgb_temp_0__N_60 , \my_vga.n2165 , \my_vga.n12 , 
         n1335, \my_vga.n8 , \my_vga.n12_adj_178 , n923, \my_vga.n1363 , 
         rgb_c_3_N_160, \my_pattern_gen.rgb_temp[0] , 
         \my_pattern_gen.rgb_c_3_N_161 , \my_pattern_gen.rgb_c_3_N_159 , 
         rgb_c_4, \my_vga.n6 , n2386, n2081, \my_pattern_gen.n2585 , 
         \my_pattern_gen.n2698 , \my_pattern_gen.n2591 , n4, 
         \my_pattern_gen.n5_adj_175 , \my_vga.hsync_c_N_165 , hsync_c, 
         \clock_device.ctrlr_latch_c_N_169 , 
         \clock_device.ctrlr_latch_c_N_168 , ctrlr_latch_c, 
         \my_pattern_gen.curr_piece_shape[12] , \my_pattern_gen.n2582 , 
         \my_pattern_gen.curr_piece_shape[13] , 
         \my_pattern_gen.curr_piece_shape[15] , 
         \my_pattern_gen.curr_piece_shape[14] , rgb_c_3, \my_pattern_gen.n6 , 
         n930, \my_pattern_gen.curr_piece_shape[8] , \my_pattern_gen.n2588 , 
         \my_pattern_gen.curr_piece_shape[9] , 
         \my_pattern_gen.curr_piece_shape[11] , 
         \my_pattern_gen.curr_piece_shape[10] , \my_pattern_gen.piece_code[2] , 
         \my_pattern_gen.curr_piece_shape_15__N_64[2] , 
         \my_pattern_gen.curr_piece_shape_15__N_64[1] , 
         \my_pattern_gen.rotate_delay[2] , 
         \my_pattern_gen.rotate_delay_2__N_149[2] , 
         \my_pattern_gen.curr_piece_shape_15__N_62[0] , 
         \my_pattern_gen.curr_piece_shape_15__N_62[1] , 
         \my_pattern_gen.down_delay_2__N_152[2] , 
         \my_pattern_gen.down_delay[2] , 
         \my_pattern_gen.curr_piece_shape_15__N_64[2]$n0 , 
         \my_pattern_gen.curr_piece_shape_15__N_64[0] , 
         \my_pattern_gen.curr_piece_shape[5] , 
         \my_pattern_gen.curr_piece_shape[4] , 
         \my_pattern_gen.curr_piece_shape[7] , 
         \my_pattern_gen.curr_piece_shape[6] , 
         \my_pattern_gen.curr_piece_shape[0] , 
         \my_pattern_gen.curr_piece_shape[1] , osc_c, 
         \my_pll.lscc_pll_inst.feedback_w , clk_test_c, test_output_c_c;

  my_vga_SLICE_0 \my_vga.SLICE_0 ( .DI1(\my_vga.col_9__N_31[8] ), 
    .DI0(\my_vga.col_9__N_31[7] ), .D1(\my_vga.n2828 ), .C1(\col[8] ), 
    .D0(\my_vga.n1887 ), .C0(\col[7] ), .LSR(\my_vga.col_0__N_50 ), 
    .CLK(outglobal_o), .CIN0(\my_vga.n1887 ), .CIN1(\my_vga.n2828 ), 
    .Q0(\col[7] ), .Q1(\col[8] ), .F0(\my_vga.col_9__N_31[7] ), 
    .F1(\my_vga.col_9__N_31[8] ), .COUT1(\my_vga.n1889 ), 
    .COUT0(\my_vga.n2828 ));
  my_vga_SLICE_1 \my_vga.SLICE_1 ( .DI1(\my_vga.col_9__N_31[6] ), 
    .DI0(\my_vga.col_9__N_31[5] ), .D1(\my_vga.n2825 ), .C1(\col[6] ), 
    .D0(\my_vga.n1885 ), .C0(\col[5] ), .LSR(\my_vga.col_0__N_50 ), 
    .CLK(outglobal_o), .CIN0(\my_vga.n1885 ), .CIN1(\my_vga.n2825 ), 
    .Q0(\col[5] ), .Q1(\col[6] ), .F0(\my_vga.col_9__N_31[5] ), 
    .F1(\my_vga.col_9__N_31[6] ), .COUT1(\my_vga.n1887 ), 
    .COUT0(\my_vga.n2825 ));
  my_vga_SLICE_2 \my_vga.SLICE_2 ( .DI1(\my_vga.col_9__N_31[4] ), 
    .DI0(\my_vga.col_9__N_31[3] ), .D1(\my_vga.n2822 ), .C1(\col[4] ), 
    .D0(\my_vga.n1883 ), .C0(\my_vga.col[3]_2 ), .LSR(\my_vga.col_0__N_50 ), 
    .CLK(outglobal_o), .CIN0(\my_vga.n1883 ), .CIN1(\my_vga.n2822 ), 
    .Q0(\my_vga.col[3]_2 ), .Q1(\col[4] ), .F0(\my_vga.col_9__N_31[3] ), 
    .F1(\my_vga.col_9__N_31[4] ), .COUT1(\my_vga.n1885 ), 
    .COUT0(\my_vga.n2822 ));
  my_vga_SLICE_3 \my_vga.SLICE_3 ( .DI1(\my_vga.col_9__N_31[2] ), 
    .DI0(\my_vga.col_9__N_31[1] ), .D1(\my_vga.n2819 ), .C1(\my_vga.col[2]_2 ), 
    .D0(\my_vga.n1881 ), .C0(\my_vga.col[1]_2 ), .LSR(\my_vga.col_0__N_50 ), 
    .CLK(outglobal_o), .CIN0(\my_vga.n1881 ), .CIN1(\my_vga.n2819 ), 
    .Q0(\my_vga.col[1]_2 ), .Q1(\my_vga.col[2]_2 ), 
    .F0(\my_vga.col_9__N_31[1] ), .F1(\my_vga.col_9__N_31[2] ), 
    .COUT1(\my_vga.n1883 ), .COUT0(\my_vga.n2819 ));
  my_vga_SLICE_4 \my_vga.SLICE_4 ( .DI1(\my_vga.col_9__N_31[0] ), 
    .D1(\my_vga.n2798 ), .C1(\my_vga.col[0]_2 ), .B1(\rotate_out_pad.vcc ), 
    .LSR(\my_vga.col_0__N_50 ), .CLK(outglobal_o), .CIN1(\my_vga.n2798 ), 
    .Q1(\my_vga.col[0]_2 ), .F1(\my_vga.col_9__N_31[0] ), 
    .COUT1(\my_vga.n1881 ), .COUT0(\my_vga.n2798 ));
  my_vga_SLICE_5 \my_vga.SLICE_5 ( .DI0(\my_vga.row_9__N_1[9] ), 
    .D1(\my_vga.n2816 ), .D0(\my_vga.n1878 ), .C0(\row[9] ), 
    .CE(\my_vga.col_0__N_50 ), .LSR(\my_vga.row_0__N_30 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.n1878 ), .CIN1(\my_vga.n2816 ), .Q0(\row[9] ), 
    .F0(\my_vga.row_9__N_1[9] ), .COUT0(\my_vga.n2816 ));
  my_vga_SLICE_6 \my_vga.SLICE_6 ( .DI1(\my_vga.row_9__N_1[8] ), 
    .DI0(\my_vga.row_9__N_1[7] ), .D1(\my_vga.n2810 ), .C1(\row[8] ), 
    .D0(\my_vga.n1876 ), .C0(\row[7] ), .CE(\my_vga.col_0__N_50 ), 
    .LSR(\my_vga.row_0__N_30 ), .CLK(outglobal_o), .CIN0(\my_vga.n1876 ), 
    .CIN1(\my_vga.n2810 ), .Q0(\row[7] ), .Q1(\row[8] ), 
    .F0(\my_vga.row_9__N_1[7] ), .F1(\my_vga.row_9__N_1[8] ), 
    .COUT1(\my_vga.n1878 ), .COUT0(\my_vga.n2810 ));
  my_vga_SLICE_7 \my_vga.SLICE_7 ( .DI1(\my_vga.row_9__N_1[6] ), 
    .DI0(\my_vga.row_9__N_1[5] ), .D1(\my_vga.n2804 ), .C1(\row[6] ), 
    .D0(\my_vga.n1874 ), .C0(\row[5] ), .CE(\my_vga.col_0__N_50 ), 
    .LSR(\my_vga.row_0__N_30 ), .CLK(outglobal_o), .CIN0(\my_vga.n1874 ), 
    .CIN1(\my_vga.n2804 ), .Q0(\row[5] ), .Q1(\row[6] ), 
    .F0(\my_vga.row_9__N_1[5] ), .F1(\my_vga.row_9__N_1[6] ), 
    .COUT1(\my_vga.n1876 ), .COUT0(\my_vga.n2804 ));
  my_vga_SLICE_8 \my_vga.SLICE_8 ( .DI1(\my_vga.row_9__N_1[4] ), 
    .DI0(\my_vga.row_9__N_1[3] ), .D1(\my_vga.n2795 ), .C1(\row[4] ), 
    .D0(\my_vga.n1872 ), .C0(\row[3] ), .CE(\my_vga.col_0__N_50 ), 
    .LSR(\my_vga.row_0__N_30 ), .CLK(outglobal_o), .CIN0(\my_vga.n1872 ), 
    .CIN1(\my_vga.n2795 ), .Q0(\row[3] ), .Q1(\row[4] ), 
    .F0(\my_vga.row_9__N_1[3] ), .F1(\my_vga.row_9__N_1[4] ), 
    .COUT1(\my_vga.n1874 ), .COUT0(\my_vga.n2795 ));
  my_vga_SLICE_9 \my_vga.SLICE_9 ( .DI1(\my_vga.row_9__N_1[2] ), 
    .DI0(\my_vga.row_9__N_1[1] ), .D1(\my_vga.n2783 ), .C1(\row[2] ), 
    .D0(\my_vga.n1870 ), .C0(\row[1] ), .CE(\my_vga.col_0__N_50 ), 
    .LSR(\my_vga.row_0__N_30 ), .CLK(outglobal_o), .CIN0(\my_vga.n1870 ), 
    .CIN1(\my_vga.n2783 ), .Q0(\row[1] ), .Q1(\row[2] ), 
    .F0(\my_vga.row_9__N_1[1] ), .F1(\my_vga.row_9__N_1[2] ), 
    .COUT1(\my_vga.n1872 ), .COUT0(\my_vga.n2783 ));
  my_vga_SLICE_10 \my_vga.SLICE_10 ( .DI1(\my_vga.row_9__N_1[0] ), 
    .D1(\my_vga.n2780 ), .C1(\row[0] ), .B1(\rotate_out_pad.vcc ), 
    .CE(\my_vga.col_0__N_50 ), .LSR(\my_vga.row_0__N_30 ), .CLK(outglobal_o), 
    .CIN1(\my_vga.n2780 ), .Q1(\row[0] ), .F1(\my_vga.row_9__N_1[0] ), 
    .COUT1(\my_vga.n1870 ), .COUT0(\my_vga.n2780 ));
  my_vga_SLICE_11 \my_vga.SLICE_11 ( .DI0(\my_vga.col_9__N_31[9] ), 
    .D1(\my_vga.n2831 ), .D0(\my_vga.n1889 ), .C0(\col[9] ), 
    .LSR(\my_vga.col_0__N_50 ), .CLK(outglobal_o), .CIN0(\my_vga.n1889 ), 
    .CIN1(\my_vga.n2831 ), .Q0(\col[9] ), .F0(\my_vga.col_9__N_31[9] ), 
    .COUT0(\my_vga.n2831 ));
  clock_device_SLICE_12 \clock_device.SLICE_12 ( 
    .DI1(\clock_device.NEScount_7__N_51[14] ), 
    .DI0(\clock_device.NEScount_7__N_51[13] ), .D1(\clock_device.n2852 ), 
    .C1(\clock_device.NEScount[6] ), .D0(\clock_device.n1865 ), 
    .C0(\clock_device.NEScount[5] ), .CLK(outglobal_o), 
    .CIN0(\clock_device.n1865 ), .CIN1(\clock_device.n2852 ), 
    .Q0(\clock_device.NEScount[5] ), .Q1(\clock_device.NEScount[6] ), 
    .F0(\clock_device.NEScount_7__N_51[13] ), 
    .F1(\clock_device.NEScount_7__N_51[14] ), .COUT1(\clock_device.n1867 ), 
    .COUT0(\clock_device.n2852 ));
  clock_device_SLICE_13 \clock_device.SLICE_13 ( 
    .DI1(\clock_device.NEScount_7__N_51[12] ), 
    .DI0(\clock_device.NEScount_7__N_51[11] ), .D1(\clock_device.n2849 ), 
    .C1(\clock_device.NEScount[4] ), .D0(\clock_device.n1863 ), 
    .C0(\NEScount[3] ), .CLK(outglobal_o), .CIN0(\clock_device.n1863 ), 
    .CIN1(\clock_device.n2849 ), .Q0(\NEScount[3] ), 
    .Q1(\clock_device.NEScount[4] ), .F0(\clock_device.NEScount_7__N_51[11] ), 
    .F1(\clock_device.NEScount_7__N_51[12] ), .COUT1(\clock_device.n1865 ), 
    .COUT0(\clock_device.n2849 ));
  clock_device_SLICE_14 \clock_device.SLICE_14 ( 
    .DI1(\clock_device.NEScount_7__N_51[6] ), 
    .DI0(\clock_device.NEScount_7__N_51[5] ), .D1(\clock_device.n2840 ), 
    .C1(\clock_device.n10 ), .D0(\clock_device.n1857 ), 
    .C0(\clock_device.n11 ), .CLK(outglobal_o), .CIN0(\clock_device.n1857 ), 
    .CIN1(\clock_device.n2840 ), .Q0(\clock_device.n11 ), 
    .Q1(\clock_device.n10 ), .F0(\clock_device.NEScount_7__N_51[5] ), 
    .F1(\clock_device.NEScount_7__N_51[6] ), .COUT1(\clock_device.n1859 ), 
    .COUT0(\clock_device.n2840 ));
  clock_device_SLICE_15 \clock_device.SLICE_15 ( 
    .DI1(\clock_device.NEScount_7__N_51[8] ), 
    .DI0(\clock_device.NEScount_7__N_51[7] ), .D1(\clock_device.n2843 ), 
    .C1(\NEScount[0] ), .D0(\clock_device.n1859 ), .C0(\clock_device.NESclk ), 
    .CLK(outglobal_o), .CIN0(\clock_device.n1859 ), 
    .CIN1(\clock_device.n2843 ), .Q0(\clock_device.NESclk ), 
    .Q1(\NEScount[0] ), .F0(\clock_device.NEScount_7__N_51[7] ), 
    .F1(\clock_device.NEScount_7__N_51[8] ), .COUT1(\clock_device.n1861 ), 
    .COUT0(\clock_device.n2843 ));
  clock_device_SLICE_16 \clock_device.SLICE_16 ( 
    .DI1(\clock_device.NEScount_7__N_51[2] ), 
    .DI0(\clock_device.NEScount_7__N_51[1] ), .D1(\clock_device.n2834 ), 
    .C1(\clock_device.n14 ), .D0(\clock_device.n1853 ), 
    .C0(\clock_device.n15 ), .CLK(outglobal_o), .CIN0(\clock_device.n1853 ), 
    .CIN1(\clock_device.n2834 ), .Q0(\clock_device.n15 ), 
    .Q1(\clock_device.n14 ), .F0(\clock_device.NEScount_7__N_51[1] ), 
    .F1(\clock_device.NEScount_7__N_51[2] ), .COUT1(\clock_device.n1855 ), 
    .COUT0(\clock_device.n2834 ));
  clock_device_SLICE_17 \clock_device.SLICE_17 ( 
    .DI0(\clock_device.NEScount_7__N_51[15] ), .D1(\clock_device.n2855 ), 
    .D0(\clock_device.n1867 ), .C0(\clock_device.NEScount[7] ), 
    .CLK(outglobal_o), .CIN0(\clock_device.n1867 ), 
    .CIN1(\clock_device.n2855 ), .Q0(\clock_device.NEScount[7] ), 
    .F0(\clock_device.NEScount_7__N_51[15] ), .COUT0(\clock_device.n2855 ));
  clock_device_SLICE_18 \clock_device.SLICE_18 ( 
    .DI1(\clock_device.NEScount_7__N_51[10] ), 
    .DI0(\clock_device.NEScount_7__N_51[9] ), .D1(\clock_device.n2846 ), 
    .C1(\NEScount[2] ), .D0(\clock_device.n1861 ), .C0(\NEScount[1] ), 
    .CLK(outglobal_o), .CIN0(\clock_device.n1861 ), 
    .CIN1(\clock_device.n2846 ), .Q0(\NEScount[1] ), .Q1(\NEScount[2] ), 
    .F0(\clock_device.NEScount_7__N_51[9] ), 
    .F1(\clock_device.NEScount_7__N_51[10] ), .COUT1(\clock_device.n1863 ), 
    .COUT0(\clock_device.n2846 ));
  clock_device_SLICE_19 \clock_device.SLICE_19 ( 
    .DI1(\clock_device.NEScount_7__N_51[4] ), 
    .DI0(\clock_device.NEScount_7__N_51[3] ), .D1(\clock_device.n2837 ), 
    .C1(\clock_device.n12 ), .D0(\clock_device.n1855 ), 
    .C0(\clock_device.n13 ), .CLK(outglobal_o), .CIN0(\clock_device.n1855 ), 
    .CIN1(\clock_device.n2837 ), .Q0(\clock_device.n13 ), 
    .Q1(\clock_device.n12 ), .F0(\clock_device.NEScount_7__N_51[3] ), 
    .F1(\clock_device.NEScount_7__N_51[4] ), .COUT1(\clock_device.n1857 ), 
    .COUT0(\clock_device.n2837 ));
  clock_device_SLICE_20 \clock_device.SLICE_20 ( 
    .DI1(\clock_device.NEScount_7__N_51[0] ), .D1(\clock_device.n2813 ), 
    .C1(\clock_device.n16 ), .B1(\rotate_out_pad.vcc ), .CLK(outglobal_o), 
    .CIN1(\clock_device.n2813 ), .Q1(\clock_device.n16 ), 
    .F1(\clock_device.NEScount_7__N_51[0] ), .COUT1(\clock_device.n1853 ), 
    .COUT0(\clock_device.n2813 ));
  my_pattern_gen_SLICE_21 \my_pattern_gen.SLICE_21 ( 
    .D1(\my_pattern_gen.n2807 ), .C1(\my_pattern_gen.frame_counter[2] ), 
    .D0(\my_pattern_gen.n1892 ), .C0(\my_pattern_gen.n2 ), 
    .CIN0(\my_pattern_gen.n1892 ), .CIN1(\my_pattern_gen.n2807 ), 
    .F0(\my_pattern_gen.frame_counter_2__N_143[1] ), 
    .F1(\my_pattern_gen.frame_counter_2__N_143[2] ), 
    .COUT0(\my_pattern_gen.n2807 ));
  my_pattern_gen_SLICE_22 \my_pattern_gen.SLICE_22 ( 
    .D1(\my_pattern_gen.n2801 ), .C1(\my_pattern_gen.n3 ), .B1(n146), 
    .CIN1(\my_pattern_gen.n2801 ), 
    .F1(\my_pattern_gen.frame_counter_2__N_143[0] ), 
    .COUT1(\my_pattern_gen.n1892 ), .COUT0(\my_pattern_gen.n2801 ));
  my_nes_controller_SLICE_23 \my_nes_controller.SLICE_23 ( 
    .DI1(\my_nes_controller.shift_reg[1].sig_001.FeedThruLUT ), 
    .DI0(\my_nes_controller.shift_reg[2].sig_000.FeedThruLUT ), 
    .D1(\my_nes_controller.shift_reg[1] ), 
    .D0(\my_nes_controller.shift_reg[2] ), .CLK(ctrlr_clk_c), 
    .Q0(\my_nes_controller.shift_reg[3] ), 
    .Q1(\my_nes_controller.shift_reg[2] ), 
    .F0(\my_nes_controller.shift_reg[2].sig_000.FeedThruLUT ), 
    .F1(\my_nes_controller.shift_reg[1].sig_001.FeedThruLUT ));
  my_nes_controller_SLICE_25 \my_nes_controller.SLICE_25 ( 
    .DI1(\my_nes_controller.shift_reg_0__N_155 ), 
    .DI0(\my_nes_controller.shift_reg[0].sig_002.FeedThruLUT ), 
    .D1(ctrlr_data_c), .D0(\my_nes_controller.shift_reg[0] ), 
    .CLK(ctrlr_clk_c), .Q0(\my_nes_controller.shift_reg[1] ), 
    .Q1(\my_nes_controller.shift_reg[0] ), 
    .F0(\my_nes_controller.shift_reg[0].sig_002.FeedThruLUT ), 
    .F1(\my_nes_controller.shift_reg_0__N_155 ));
  my_pattern_gen_SLICE_27 \my_pattern_gen.SLICE_27 ( 
    .DI1(\my_pattern_gen.rotate_delay_1__N_150 ), 
    .DI0(\my_pattern_gen.rotate_delay_2__N_149[0] ), 
    .D1(\my_pattern_gen.frame_counter[2] ), 
    .C1(\my_pattern_gen.rotate_delay[1] ), 
    .B1(\my_pattern_gen.rotate_delay[0] ), .A1(n146), 
    .D0(\my_pattern_gen.n5_adj_174 ), .C0(\my_pattern_gen.rotate_delay[0] ), 
    .B0(\my_pattern_gen.rotate_delay[1] ), .A0(\my_pattern_gen.n147 ), 
    .CLK(outglobal_o), .Q0(\my_pattern_gen.rotate_delay[0] ), 
    .Q1(\my_pattern_gen.rotate_delay[1] ), 
    .F0(\my_pattern_gen.rotate_delay_2__N_149[0] ), 
    .F1(\my_pattern_gen.rotate_delay_1__N_150 ));
  my_pattern_gen_SLICE_28 \my_pattern_gen.SLICE_28 ( 
    .DI1(\my_pattern_gen.down_delay_1__N_153 ), 
    .DI0(\my_pattern_gen.down_delay_2__N_152[0] ), 
    .D1(\my_pattern_gen.frame_counter[2] ), 
    .C1(\my_pattern_gen.down_delay[1] ), .B1(\my_pattern_gen.down_delay[0] ), 
    .A1(n146), .D0(\my_pattern_gen.down_delay[1] ), .C0(\my_pattern_gen.n147 ), 
    .B0(\my_pattern_gen.n5 ), .A0(\my_pattern_gen.down_delay[0] ), 
    .CLK(outglobal_o), .Q0(\my_pattern_gen.down_delay[0] ), 
    .Q1(\my_pattern_gen.down_delay[1] ), 
    .F0(\my_pattern_gen.down_delay_2__N_152[0] ), 
    .F1(\my_pattern_gen.down_delay_1__N_153 ));
  my_pattern_gen_SLICE_29 \my_pattern_gen.SLICE_29 ( 
    .DI1(\my_pattern_gen.frame_counter_2__N_143[1].sig_004.FeedThruLUT ), 
    .DI0(\my_pattern_gen.frame_counter_2__N_143[0].sig_003.FeedThruLUT ), 
    .D1(\my_pattern_gen.frame_counter_2__N_143[1] ), 
    .D0(\my_pattern_gen.frame_counter_2__N_143[0] ), 
    .CE(\my_pattern_gen.n147 ), .CLK(outglobal_o), .Q0(\my_pattern_gen.n3 ), 
    .Q1(\my_pattern_gen.n2 ), 
    .F0(\my_pattern_gen.frame_counter_2__N_143[0].sig_003.FeedThruLUT ), 
    .F1(\my_pattern_gen.frame_counter_2__N_143[1].sig_004.FeedThruLUT ));
  my_pattern_gen_SLICE_30 \my_pattern_gen.SLICE_30 ( 
    .DI0(\my_pattern_gen.frame_counter_2__N_142.sig_005.FeedThruLUT ), 
    .D0(\my_pattern_gen.frame_counter[2] ), .C0(n146), 
    .LSR(\my_pattern_gen.frame_counter_2__N_143[2] ), .CLK(outglobal_o), 
    .Q0(\my_pattern_gen.frame_counter[2] ), 
    .F0(\my_pattern_gen.frame_counter_2__N_142.sig_005.FeedThruLUT ));
  my_pattern_gen_SLICE_37 \my_pattern_gen.SLICE_37 ( 
    .DI1(\my_pattern_gen.curr_piece_shape_15__N_64[0]$n2 ), 
    .DI0(\my_pattern_gen.curr_piece_shape_15__N_64[1]$n1 ), 
    .D1(\my_pattern_gen.n274[0] ), .C1(\my_pattern_gen.piece_code[0] ), 
    .D0(\my_pattern_gen.piece_code[1] ), .C0(\my_pattern_gen.n274[0] ), 
    .B0(\my_pattern_gen.piece_code[0] ), .CLK(outglobal_o), 
    .Q0(\my_pattern_gen.piece_code[1] ), .Q1(\my_pattern_gen.piece_code[0] ), 
    .F0(\my_pattern_gen.curr_piece_shape_15__N_64[1]$n1 ), 
    .F1(\my_pattern_gen.curr_piece_shape_15__N_64[0]$n2 ));
  my_pattern_gen_SLICE_39 \my_pattern_gen.SLICE_39 ( 
    .DI1(\my_pattern_gen.curr_piece_shape_15__N_62[0]$n4 ), 
    .DI0(\my_pattern_gen.curr_piece_shape_15__N_62[1]$n3 ), 
    .D1(\my_pattern_gen.n231 ), .C1(\my_pattern_gen.piece_rotation[0] ), 
    .D0(\my_pattern_gen.piece_rotation[0] ), .C0(\my_pattern_gen.n231 ), 
    .B0(\my_pattern_gen.piece_rotation[1] ), .CLK(outglobal_o), 
    .Q0(\my_pattern_gen.piece_rotation[1] ), 
    .Q1(\my_pattern_gen.piece_rotation[0] ), 
    .F0(\my_pattern_gen.curr_piece_shape_15__N_62[1]$n3 ), 
    .F1(\my_pattern_gen.curr_piece_shape_15__N_62[0]$n4 ));
  my_nes_controller_SLICE_41 \my_nes_controller.SLICE_41 ( 
    .D1(\my_pattern_gen.n2275 ), .C1(down_button), 
    .B1(\my_pattern_gen.down_delay[0] ), .A1(\my_pattern_gen.n147 ), 
    .D0(down_button), .C0(\my_nes_controller.shift_reg[2] ), 
    .B0(\my_nes_controller.down_button_N_172 ), .F0(down_button), 
    .F1(\my_pattern_gen.n274[0] ));
  my_nes_controller_SLICE_43 \my_nes_controller.SLICE_43 ( 
    .D1(\my_pattern_gen.n2285 ), .C1(rotate_out_c), .B1(\my_pattern_gen.n147 ), 
    .A1(\my_pattern_gen.rotate_delay[0] ), .D0(rotate_out_c), 
    .C0(\my_nes_controller.shift_reg[3] ), 
    .B0(\my_nes_controller.down_button_N_172 ), .F0(rotate_out_c), 
    .F1(\my_pattern_gen.n231 ));
  my_vga_SLICE_45 \my_vga.SLICE_45 ( .D1(\my_vga.vsync_c_N_167 ), 
    .C1(\my_vga.vsync_c_N_166 ), .B1(\row[2] ), .A1(\row[9] ), .D0(\row[1] ), 
    .C0(\row[4] ), .A0(\row[2] ), .F0(\my_vga.vsync_c_N_166 ), .F1(vsync_c));
  my_pattern_gen_SLICE_47 \my_pattern_gen.SLICE_47 ( 
    .D1(\my_pattern_gen.n2392 ), .C1(\my_pattern_gen.n1[1] ), 
    .B1(\my_pattern_gen.n2391 ), .A1(\my_pattern_gen.n1[2] ), .D0(\col[4] ), 
    .C0(\col[5] ), .F0(\my_pattern_gen.n1[1] ), .F1(\my_pattern_gen.n2576 ));
  my_pattern_gen_SLICE_48 \my_pattern_gen.SLICE_48 ( 
    .D1(\my_pattern_gen.n2576 ), .C1(\my_pattern_gen.n2383 ), 
    .B1(\my_pattern_gen.n2382 ), .A1(\my_pattern_gen.n1[2] ), 
    .D0(\my_pattern_gen.curr_piece_shape[3] ), 
    .C0(\my_pattern_gen.curr_piece_shape[2] ), .B0(\col[4] ), 
    .F0(\my_pattern_gen.n2383 ), .F1(n2579));
  my_nes_controller_SLICE_49 \my_nes_controller.SLICE_49 ( 
    .C1(ctrlr_clk_c_N_170), .A1(\NEScount[1] ), 
    .D0(\clock_device.NEScount[5] ), .C0(\clock_device.NEScount[7] ), 
    .B0(\clock_device.NEScount[6] ), .A0(\clock_device.NEScount[4] ), 
    .F0(ctrlr_clk_c_N_170), .F1(\my_nes_controller.n6 ));
  my_vga_SLICE_51 \my_vga.SLICE_51 ( .D1(\col[9] ), .C1(\my_vga.n98 ), 
    .D0(\my_vga.col[3]_2 ), .C0(\my_vga.col[1]_2 ), .B0(\my_vga.col[2]_2 ), 
    .A0(\my_vga.col[0]_2 ), .F0(\my_vga.n98 ), .F1(\my_vga.n120 ));
  my_vga_SLICE_52 \my_vga.SLICE_52 ( .D1(\my_pattern_gen.rgb_c_0_N_163 ), 
    .C1(rgb_c_0_N_162), .B1(\col[9] ), .A1(\col[8] ), 
    .D0(\my_vga.hsync_c_N_164 ), .C0(\my_vga.n98 ), .B0(\col[8] ), 
    .A0(\col[7] ), .F0(\my_vga.n1339 ), .F1(rgb_c_0));
  my_vga_SLICE_54 \my_vga.SLICE_54 ( .D1(\col[7] ), .C1(\my_vga.n8_adj_179 ), 
    .A1(\col[8] ), .D0(\col[4] ), .C0(\my_vga.n120 ), .B0(\col[5] ), 
    .A0(\col[6] ), .F0(\my_vga.n8_adj_179 ), .F1(\my_vga.col_0__N_50 ));
  my_vga_SLICE_55 \my_vga.SLICE_55 ( .D1(\col[9] ), .C1(n117), .B1(\col[8] ), 
    .A1(\col[7] ), .D0(\col[6] ), .C0(\col[5] ), .F0(n117), 
    .F1(\my_pattern_gen.rgb_temp_0__N_60 ));
  my_vga_SLICE_57 \my_vga.SLICE_57 ( .D1(\row[3] ), .C1(\my_vga.n2165 ), 
    .D0(\row[8] ), .C0(\row[5] ), .B0(\row[6] ), .A0(\row[7] ), 
    .F0(\my_vga.n2165 ), .F1(\my_vga.vsync_c_N_167 ));
  my_vga_SLICE_59 \my_vga.SLICE_59 ( .D1(\col[7] ), 
    .C1(\my_vga.hsync_c_N_164 ), .B1(\my_vga.n2165 ), .A1(\col[8] ), 
    .D0(\col[6] ), .C0(\col[4] ), .A0(\col[5] ), .F0(\my_vga.hsync_c_N_164 ), 
    .F1(\my_vga.n12 ));
  my_vga_SLICE_61 \my_vga.SLICE_61 ( .D1(n146), 
    .C1(\my_pattern_gen.frame_counter[2] ), .D0(\row[9] ), .C0(\my_vga.n12 ), 
    .B0(n1335), .A0(\my_vga.n120 ), .F0(n146), .F1(\my_pattern_gen.n147 ));
  my_vga_SLICE_63 \my_vga.SLICE_63 ( .D1(\my_vga.n8 ), 
    .C1(\my_vga.n12_adj_178 ), .B1(\my_vga.col_0__N_50 ), .A1(\row[3] ), 
    .D0(\row[2] ), .C0(n923), .B0(\row[8] ), .A0(\row[0] ), 
    .F0(\my_vga.n12_adj_178 ), .F1(\my_vga.row_0__N_30 ));
  my_pattern_gen_SLICE_64 \my_pattern_gen.SLICE_64 ( .D1(\row[0] ), .C1(n923), 
    .B1(\row[2] ), .A1(\row[3] ), .D0(\row[1] ), .C0(\row[4] ), .F0(n923), 
    .F1(n1335));
  my_vga_SLICE_66 \my_vga.SLICE_66 ( .D0(\row[9] ), .C0(\row[6] ), 
    .B0(\row[5] ), .A0(\row[7] ), .F0(\my_vga.n8 ));
  my_vga_SLICE_67 \my_vga.SLICE_67 ( .D1(\my_vga.n1339 ), .C1(\my_vga.n1363 ), 
    .B1(\col[9] ), .A1(\row[9] ), .D0(\my_vga.n2165 ), .C0(n1335), 
    .F0(\my_vga.n1363 ), .F1(rgb_c_3_N_160));
  my_pattern_gen_SLICE_70 \my_pattern_gen.SLICE_70 ( 
    .D1(\my_pattern_gen.rgb_temp[0] ), .C1(\my_pattern_gen.rgb_c_3_N_161 ), 
    .B1(\my_pattern_gen.rgb_c_3_N_159 ), .A1(rgb_c_3_N_160), .D0(\row[9] ), 
    .C0(\my_pattern_gen.rgb_temp_0__N_60 ), .B0(\row[8] ), 
    .F0(\my_pattern_gen.rgb_c_3_N_161 ), .F1(rgb_c_4));
  my_vga_SLICE_71 \my_vga.SLICE_71 ( .D1(\row[9] ), .C1(\my_vga.n6 ), 
    .B1(\row[7] ), .A1(\col[7] ), .D0(n2386), .C0(n2081), .B0(n2579), 
    .A0(\row[6] ), .F0(\my_vga.n6 ), .F1(rgb_c_0_N_162));
  my_pattern_gen_SLICE_72 \my_pattern_gen.SLICE_72 ( 
    .D1(\my_pattern_gen.n2585 ), .C1(\my_pattern_gen.n2698 ), .B1(\row[4] ), 
    .A1(\my_pattern_gen.n2591 ), .D0(\col[4] ), .C0(\col[6] ), .B0(\col[5] ), 
    .F0(\my_pattern_gen.n2698 ), .F1(n2386));
  my_vga_SLICE_75 \my_vga.SLICE_75 ( .D1(\row[4] ), .C1(\col[4] ), 
    .B1(\col[6] ), .A1(\col[5] ), .D0(\col[4] ), .B0(\col[5] ), .F0(n4), 
    .F1(\my_pattern_gen.n1[2] ));
  my_pattern_gen_SLICE_76 \my_pattern_gen.SLICE_76 ( .D1(n4), 
    .C1(\my_pattern_gen.n5_adj_175 ), .B1(\row[4] ), .A1(\col[6] ), 
    .D0(\col[7] ), .C0(\row[5] ), .F0(\my_pattern_gen.n5_adj_175 ), .F1(n2081));
  my_vga_SLICE_77 \my_vga.SLICE_77 ( .D1(\col[8] ), 
    .C1(\my_vga.hsync_c_N_165 ), .B1(\col[7] ), .A1(\my_vga.hsync_c_N_164 ), 
    .D0(\col[4] ), .C0(\col[5] ), .B0(\col[6] ), .A0(\col[9] ), 
    .F0(\my_vga.hsync_c_N_165 ), .F1(hsync_c));
  clock_device_SLICE_79 \clock_device.SLICE_79 ( 
    .C0(\clock_device.NEScount[7] ), .A0(\clock_device.NEScount[4] ), 
    .F0(\clock_device.ctrlr_latch_c_N_169 ));
  clock_device_SLICE_80 \clock_device.SLICE_80 ( 
    .D1(\clock_device.ctrlr_latch_c_N_169 ), 
    .C1(\clock_device.ctrlr_latch_c_N_168 ), .B1(\NEScount[0] ), 
    .A1(\NEScount[1] ), .D0(\NEScount[3] ), .C0(\NEScount[2] ), 
    .B0(\clock_device.NEScount[6] ), .A0(\clock_device.NEScount[5] ), 
    .F0(\clock_device.ctrlr_latch_c_N_168 ), .F1(ctrlr_latch_c));
  my_pattern_gen_SLICE_82 \my_pattern_gen.SLICE_82 ( 
    .D1(\my_pattern_gen.curr_piece_shape[12] ), .C1(\my_pattern_gen.n2582 ), 
    .B1(\my_pattern_gen.curr_piece_shape[13] ), .A1(\my_pattern_gen.n1[1] ), 
    .D0(\col[4] ), .C0(\my_pattern_gen.curr_piece_shape[15] ), .B0(\col[5] ), 
    .A0(\my_pattern_gen.curr_piece_shape[14] ), .F0(\my_pattern_gen.n2582 ), 
    .F1(\my_pattern_gen.n2585 ));
  my_pattern_gen_SLICE_83 \my_pattern_gen.SLICE_83 ( 
    .D1(\my_pattern_gen.rgb_c_3_N_161 ), .C1(\my_pattern_gen.rgb_temp[0] ), 
    .B1(\my_pattern_gen.rgb_c_3_N_159 ), .A1(rgb_c_3_N_160), 
    .D0(rgb_c_0_N_162), .C0(\my_pattern_gen.rgb_c_0_N_163 ), 
    .B0(\my_pattern_gen.rgb_temp_0__N_60 ), .F0(\my_pattern_gen.rgb_temp[0] ), 
    .F1(rgb_c_3));
  my_pattern_gen_SLICE_84 \my_pattern_gen.SLICE_84 ( .D1(\row[4] ), 
    .C1(\my_pattern_gen.n6 ), .B1(\col[4] ), .A1(\col[7] ), .D0(n930), 
    .C0(\col[6] ), .B0(\col[5] ), .F0(\my_pattern_gen.n6 ), 
    .F1(\my_pattern_gen.rgb_c_3_N_159 ));
  my_pattern_gen_SLICE_86 \my_pattern_gen.SLICE_86 ( 
    .D1(\my_pattern_gen.n2698 ), .C1(n930), .B1(n1335), .A1(\row[8] ), 
    .D0(\row[5] ), .C0(\row[6] ), .A0(\row[7] ), .F0(n930), 
    .F1(\my_pattern_gen.rgb_c_0_N_163 ));
  my_pattern_gen_SLICE_89 \my_pattern_gen.SLICE_89 ( 
    .D1(\my_pattern_gen.curr_piece_shape[8] ), .C1(\my_pattern_gen.n2588 ), 
    .B1(\my_pattern_gen.n1[1] ), .A1(\my_pattern_gen.curr_piece_shape[9] ), 
    .D0(\my_pattern_gen.curr_piece_shape[11] ), 
    .C0(\my_pattern_gen.curr_piece_shape[10] ), .B0(\col[4] ), .A0(\col[5] ), 
    .F0(\my_pattern_gen.n2588 ), .F1(\my_pattern_gen.n2591 ));
  my_pattern_gen_SLICE_93 \my_pattern_gen.SLICE_93 ( 
    .D1(\my_pattern_gen.n274[0] ), .C1(\my_pattern_gen.piece_code[1] ), 
    .A1(\my_pattern_gen.piece_code[0] ), .D0(\my_pattern_gen.piece_code[1] ), 
    .C0(\my_pattern_gen.n274[0] ), .B0(\my_pattern_gen.piece_code[0] ), 
    .A0(\my_pattern_gen.piece_code[2] ), 
    .F0(\my_pattern_gen.curr_piece_shape_15__N_64[2] ), 
    .F1(\my_pattern_gen.curr_piece_shape_15__N_64[1] ));
  my_nes_controller_SLICE_95 \my_nes_controller.SLICE_95 ( 
    .D1(\clock_device.NESclk ), .C1(\NEScount[3] ), .B1(ctrlr_clk_c_N_170), 
    .D0(\NEScount[3] ), .C0(\my_nes_controller.n6 ), .B0(\NEScount[0] ), 
    .A0(\NEScount[2] ), .F0(\my_nes_controller.down_button_N_172 ), 
    .F1(ctrlr_clk_c));
  my_pattern_gen_SLICE_97 \my_pattern_gen.SLICE_97 ( 
    .D0(\my_pattern_gen.rotate_delay[2] ), .B0(rotate_out_c), 
    .F0(\my_pattern_gen.n5_adj_174 ));
  my_pattern_gen_SLICE_98 \my_pattern_gen.SLICE_98 ( 
    .DI1(\my_pattern_gen.rotate_delay_2__N_149[2] ), 
    .D1(\my_pattern_gen.n147 ), .C1(\my_pattern_gen.rotate_delay[1] ), 
    .B1(\my_pattern_gen.rotate_delay[0] ), 
    .A1(\my_pattern_gen.rotate_delay[2] ), 
    .D0(\my_pattern_gen.rotate_delay[2] ), 
    .B0(\my_pattern_gen.rotate_delay[1] ), .CLK(outglobal_o), 
    .Q1(\my_pattern_gen.rotate_delay[2] ), .F0(\my_pattern_gen.n2285 ), 
    .F1(\my_pattern_gen.rotate_delay_2__N_149[2] ));
  my_pattern_gen_SLICE_99 \my_pattern_gen.SLICE_99 ( 
    .D1(\my_pattern_gen.n231 ), .C1(\my_pattern_gen.piece_rotation[0] ), 
    .A1(\my_pattern_gen.piece_rotation[1] ), 
    .D0(\my_pattern_gen.piece_rotation[0] ), .C0(\my_pattern_gen.n231 ), 
    .F0(\my_pattern_gen.curr_piece_shape_15__N_62[0] ), 
    .F1(\my_pattern_gen.curr_piece_shape_15__N_62[1] ));
  my_pattern_gen_SLICE_101 \my_pattern_gen.SLICE_101 ( 
    .DI1(\my_pattern_gen.down_delay_2__N_152[2] ), .D1(\my_pattern_gen.n147 ), 
    .C1(\my_pattern_gen.down_delay[1] ), .B1(\my_pattern_gen.down_delay[0] ), 
    .A1(\my_pattern_gen.down_delay[2] ), .D0(\my_pattern_gen.down_delay[1] ), 
    .B0(\my_pattern_gen.down_delay[2] ), .CLK(outglobal_o), 
    .Q1(\my_pattern_gen.down_delay[2] ), .F0(\my_pattern_gen.n2275 ), 
    .F1(\my_pattern_gen.down_delay_2__N_152[2] ));
  my_pattern_gen_SLICE_102 \my_pattern_gen.SLICE_102 ( 
    .DI1(\my_pattern_gen.curr_piece_shape_15__N_64[2]$n0 ), 
    .D1(\my_pattern_gen.piece_code[2] ), .C1(\my_pattern_gen.piece_code[1] ), 
    .B1(\my_pattern_gen.n274[0] ), .A1(\my_pattern_gen.piece_code[0] ), 
    .D0(\my_pattern_gen.piece_code[0] ), .C0(\my_pattern_gen.n274[0] ), 
    .CLK(outglobal_o), .Q1(\my_pattern_gen.piece_code[2] ), 
    .F0(\my_pattern_gen.curr_piece_shape_15__N_64[0] ), 
    .F1(\my_pattern_gen.curr_piece_shape_15__N_64[2]$n0 ));
  my_pattern_gen_SLICE_106 \my_pattern_gen.SLICE_106 ( 
    .D0(\my_pattern_gen.down_delay[2] ), .C0(down_button), 
    .F0(\my_pattern_gen.n5 ));
  my_pattern_gen_SLICE_107 \my_pattern_gen.SLICE_107 ( 
    .D0(\my_pattern_gen.curr_piece_shape[5] ), 
    .C0(\my_pattern_gen.curr_piece_shape[4] ), .B0(\col[4] ), 
    .F0(\my_pattern_gen.n2391 ));
  my_pattern_gen_SLICE_110 \my_pattern_gen.SLICE_110 ( 
    .D1(\my_pattern_gen.curr_piece_shape[7] ), 
    .C1(\my_pattern_gen.curr_piece_shape[6] ), .A1(\col[4] ), 
    .D0(\my_pattern_gen.curr_piece_shape[0] ), 
    .C0(\my_pattern_gen.curr_piece_shape[1] ), .B0(\col[4] ), 
    .F0(\my_pattern_gen.n2382 ), .F1(\my_pattern_gen.n2392 ));
  rotate_out_pad_SLICE_113 \rotate_out_pad.SLICE_113 ( 
    .F0(\rotate_out_pad.vcc ));
  my_pattern_gen_piece_device_curr_piece_shape_15__I_0 
    \my_pattern_gen.piece_device.curr_piece_shape_15__I_0 ( 
    .RADDR4(\my_pattern_gen.curr_piece_shape_15__N_64[2] ), 
    .RADDR3(\my_pattern_gen.curr_piece_shape_15__N_64[1] ), 
    .RADDR2(\my_pattern_gen.curr_piece_shape_15__N_64[0] ), 
    .RADDR1(\my_pattern_gen.curr_piece_shape_15__N_62[1] ), 
    .RADDR0(\my_pattern_gen.curr_piece_shape_15__N_62[0] ), 
    .RCLKE(\rotate_out_pad.vcc ), .RCLK(outglobal_o), 
    .RE(\rotate_out_pad.vcc ), .WCLKE(\rotate_out_pad.vcc ), 
    .RDATA15(\my_pattern_gen.curr_piece_shape[15] ), 
    .RDATA14(\my_pattern_gen.curr_piece_shape[14] ), 
    .RDATA13(\my_pattern_gen.curr_piece_shape[13] ), 
    .RDATA12(\my_pattern_gen.curr_piece_shape[12] ), 
    .RDATA11(\my_pattern_gen.curr_piece_shape[11] ), 
    .RDATA10(\my_pattern_gen.curr_piece_shape[10] ), 
    .RDATA9(\my_pattern_gen.curr_piece_shape[9] ), 
    .RDATA8(\my_pattern_gen.curr_piece_shape[8] ), 
    .RDATA7(\my_pattern_gen.curr_piece_shape[7] ), 
    .RDATA6(\my_pattern_gen.curr_piece_shape[6] ), 
    .RDATA5(\my_pattern_gen.curr_piece_shape[5] ), 
    .RDATA4(\my_pattern_gen.curr_piece_shape[4] ), 
    .RDATA3(\my_pattern_gen.curr_piece_shape[3] ), 
    .RDATA2(\my_pattern_gen.curr_piece_shape[2] ), 
    .RDATA1(\my_pattern_gen.curr_piece_shape[1] ), 
    .RDATA0(\my_pattern_gen.curr_piece_shape[0] ));
  my_pll_lscc_pll_inst_u_PLL_B \my_pll.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(osc_c), .FEEDBACK(\my_pll.lscc_pll_inst.feedback_w ), 
    .RESET_N(\rotate_out_pad.vcc ), 
    .INTFBOUT(\my_pll.lscc_pll_inst.feedback_w ), .OUTCORE(clk_test_c), 
    .OUTGLOBAL(outglobal_o));
  ctrlr_data ctrlr_data_I( .PADDI(ctrlr_data_c), .ctrlr_data(ctrlr_data));
  test_input test_input_I( .PADDI(test_output_c_c), .test_input(test_input));
  osc osc_I( .PADDI(osc_c), .osc(osc));
  rotate_out rotate_out_I( .PADDO(rotate_out_c), .rotate_out(rotate_out));
  test_output test_output_I( .PADDO(test_output_c_c), 
    .test_output(test_output));
  ctrlr_clk ctrlr_clk_I( .PADDO(ctrlr_clk_c), .ctrlr_clk(ctrlr_clk));
  ctrlr_latch ctrlr_latch_I( .PADDO(ctrlr_latch_c), .ctrlr_latch(ctrlr_latch));
  clk_test clk_test_I( .PADDO(clk_test_c), .clk_test(clk_test));
  vsync vsync_I( .PADDO(vsync_c), .vsync(vsync));
  hsync hsync_I( .PADDO(hsync_c), .hsync(hsync));
  rgb_0_ \rgb[0]_I ( .PADDO(rgb_c_0), .rgb0(rgb[0]));
  rgb_1_ \rgb[1]_I ( .PADDO(rgb_c_4), .rgb1(rgb[1]));
  rgb_2_ \rgb[2]_I ( .PADDO(rgb_c_3), .rgb2(rgb[2]));
  rgb_3_ \rgb[3]_I ( .PADDO(rgb_c_3), .rgb3(rgb[3]));
  rgb_4_ \rgb[4]_I ( .PADDO(rgb_c_4), .rgb4(rgb[4]));
  rgb_5_ \rgb[5]_I ( .PADDO(rgb_c_4), .rgb5(rgb[5]));
endmodule

module my_vga_SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \my_vga/col_temp_121_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/col_9__I_11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/col_9__I_10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module my_vga_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \my_vga/col_temp_121_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/col_9__I_13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/col_9__I_12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \my_vga/col_temp_121_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/col_9__I_15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/col_9__I_14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \my_vga/col_temp_121_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/col_9__I_17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/col_9__I_16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_4 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \my_vga/col_temp_121_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/col_9__I_18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_5 ( input DI0, D1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \my_vga/row_temp_122_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/row_9__I_0_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \my_vga/row_temp_122_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/row_9__I_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \my_vga/row_9__I_1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_7 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \my_vga/row_temp_122_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/row_9__I_4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \my_vga/row_9__I_3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \my_vga/row_temp_122_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/row_9__I_6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \my_vga/row_9__I_5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \my_vga/row_temp_122_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/row_9__I_8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \my_vga/row_9__I_7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_10 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \my_vga/row_temp_122_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/row_9__I_9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_11 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \my_vga/col_temp_121_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/col_9__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module clock_device_SLICE_12 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \clock_device/counter_117_144_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/NEScount_7__I_20 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/NEScount_7__I_19 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \clock_device/counter_117_144_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/NEScount_7__I_22 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/NEScount_7__I_21 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_14 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \clock_device/counter_117_144_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/counter_117_144__i6 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/counter_117_144__i7 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \clock_device/counter_117_144_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/NEScount_7__I_34 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/NEScount_7__I_25 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_16 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \clock_device/counter_117_144_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/counter_117_144__i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/counter_117_144__i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_17 ( input DI0, D1, D0, C0, CLK, CIN0, CIN1, output 
    Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  fa2 \clock_device/counter_117_144_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/NEScount_7__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \clock_device/counter_117_144_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/NEScount_7__I_24 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/NEScount_7__I_23 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_19 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \clock_device/counter_117_144_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \clock_device/counter_117_144__i4 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/counter_117_144__i5 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module clock_device_SLICE_20 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \clock_device/counter_117_144_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \clock_device/counter_117_144__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module my_pattern_gen_SLICE_21 ( input D1, C1, D0, C0, CIN0, CIN1, output F0, 
    F1, COUT0 );
  wire   GNDI;

  fa2 \my_pattern_gen/frame_counter_120_152_add_4_3 ( .A0(GNDI), .B0(GNDI), 
    .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), 
    .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_pattern_gen_SLICE_22 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \my_pattern_gen/frame_counter_120_152_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), 
    .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_nes_controller_SLICE_23 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \my_nes_controller.SLICE_23_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \my_nes_controller.SLICE_23_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \my_nes_controller/shift_reg_1__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_nes_controller/shift_reg_2__I_0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_nes_controller_SLICE_25 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 \my_nes_controller/i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \my_nes_controller.SLICE_25_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \my_nes_controller/shift_reg_0__I_33 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_nes_controller/shift_reg_0__I_0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_27 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \my_pattern_gen/i1901_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40004 \my_pattern_gen/i1461_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \my_pattern_gen/rotate_delay_1__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_pattern_gen/rotate_delay_2__I_31 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x78F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xA5A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_28 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, 
    A0, CLK, output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \my_pattern_gen/i1900_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40005 \my_pattern_gen/i1482_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \my_pattern_gen/down_delay_1__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_pattern_gen/down_delay_2__I_32 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xA5A4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_29 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 \my_pattern_gen.SLICE_29_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \my_pattern_gen.SLICE_29_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \my_pattern_gen/frame_counter_120_152__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  ffsre2 \my_pattern_gen/frame_counter_120_152__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module my_pattern_gen_SLICE_30 ( input DI0, D0, C0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40006 \my_pattern_gen.frame_counter_2__N_142.005.FeedThruLUT ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20007 \my_pattern_gen/frame_counter_2__I_0 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20007 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module my_pattern_gen_SLICE_37 ( input DI1, DI0, D1, C1, D0, C0, B0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 \my_pattern_gen.SLICE_37_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \my_pattern_gen.SLICE_37_K0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \my_pattern_gen/curr_piece_shape_15__I_30 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_pattern_gen/curr_piece_shape_15__I_29 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x3FC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_39 ( input DI1, DI0, D1, C1, D0, C0, B0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40008 \my_pattern_gen.SLICE_39_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \my_pattern_gen.SLICE_39_K0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \my_pattern_gen/curr_piece_shape_15__I_27 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_pattern_gen/curr_piece_shape_15__I_26 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x3CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_nes_controller_SLICE_41 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40011 \my_pattern_gen/i3_4_lut_adj_41 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40012 \my_nes_controller/down_button_I_0 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_nes_controller_SLICE_43 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40013 \my_pattern_gen/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 \my_nes_controller/rotate_out_c_I_0 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_45 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40014 \my_vga/row_9__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \my_vga/i1_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xEFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_47 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40016 \my_pattern_gen/n4_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40017 \my_pattern_gen/sub_449_inv_0_i2_2_lut ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xF858") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xF00F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_48 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40018 \my_pattern_gen/n2576_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40019 \my_pattern_gen/i1887_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFA44") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_nes_controller_SLICE_49 ( input C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40020 \my_nes_controller/i1_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \clock_device/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_51 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40022 \my_vga/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \my_vga/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_52 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40023 \my_pattern_gen/rgb_c_0_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \my_vga/i1005_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_54 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40025 \my_vga/i4_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \my_vga/i3_4_lut_adj_46 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x00A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x0004") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_55 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40027 \my_pattern_gen/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \my_vga/i1_2_lut_adj_42 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_57 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 \my_vga/i1_2_lut_adj_49 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 \my_vga/i3_4_lut_adj_43 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_59 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40031 \my_vga/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \my_vga/i1_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xFBFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_61 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40033 \my_pattern_gen/i1974_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \my_vga/i1962_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0x0FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_63 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40035 \my_vga/i666_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \my_vga/i5_4_lut_adj_45 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0x0008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFDFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_64 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40037 \my_pattern_gen/i1803_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40028 \my_pattern_gen/i1_2_lut_adj_36 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_66 ( input D0, C0, B0, A0, output F0 );

  lut40038 \my_vga.i1_2_lut_adj_44 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_67 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40039 \my_vga/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 \my_vga/i1029_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40040 \my_pattern_gen/rgb_c_4_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 \my_pattern_gen/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x5504") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40042 \my_vga/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \my_vga/i1_4_lut_adj_47 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xA808") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40044 \my_pattern_gen/i1890_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \my_pattern_gen/i39_rep_6_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xBE82") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x3CF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_75 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40046 \my_pattern_gen/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40047 \my_vga/i1_2_lut_adj_48 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x936C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_76 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40048 \my_pattern_gen/i3_4_lut_adj_40 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \my_pattern_gen/i1_2_lut_adj_39 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x871E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40050 \my_vga/col_8__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \my_vga/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xFF7F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x2AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module clock_device_SLICE_79 ( input C0, A0, output F0 );
  wire   GNDI;

  lut40052 \clock_device/i2_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module clock_device_SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40053 \clock_device/NEScount_0__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40054 \clock_device/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40055 \my_pattern_gen/n2582_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40056 \my_pattern_gen/col[4]_bdd_4_lut_2_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xE5E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xF322") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40057 \my_pattern_gen/rgb_c_3_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40058 \my_pattern_gen/rgb_temp_0__I_0 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x5051") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40059 \my_pattern_gen/i3_4_lut_adj_37 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40060 \my_pattern_gen/i2_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_86 ( input D1, C1, B1, A1, D0, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40061 \my_pattern_gen/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \my_pattern_gen/i2_3_lut_adj_38 ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0x5700") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_89 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40063 \my_pattern_gen/n2588_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40064 \my_pattern_gen/col[4]_bdd_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xE3E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xDC54") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_93 ( input D1, C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40065 \my_pattern_gen/i201_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \my_pattern_gen/i208_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0x5AF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x6AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_nes_controller_SLICE_95 ( input D1, C1, B1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40067 \clock_device/NEScount_3__I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \my_nes_controller/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x0300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_97 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40069 \my_pattern_gen/i1_2_lut_adj_35 ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_98 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40070 \my_pattern_gen/i1476_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40069 \my_pattern_gen/i1815_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_pattern_gen/rotate_delay_2__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0xAA6A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_99 ( input D1, C1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40071 \my_pattern_gen/mux_48_i2_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \my_pattern_gen/i450_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0x5AAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_101 ( input DI1, D1, C1, B1, A1, D0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40070 \my_pattern_gen/i1497_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40069 \my_pattern_gen/i1805_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_pattern_gen/down_delay_2__I_0 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module my_pattern_gen_SLICE_102 ( input DI1, D1, C1, B1, A1, D0, C0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40073 \my_pattern_gen.SLICE_102_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40072 \my_pattern_gen/i193_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_pattern_gen/curr_piece_shape_15__I_28 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_106 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40028 \my_pattern_gen/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_pattern_gen_SLICE_107 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40019 \my_pattern_gen/i1895_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_pattern_gen_SLICE_110 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40074 \my_pattern_gen/i1896_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \my_pattern_gen/i1886_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module rotate_out_pad_SLICE_113 ( output F0 );
  wire   GNDI;

  lut40076 \rotate_out_pad.vhi_inst ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_piece_device_curr_piece_shape_15__I_0 ( input RADDR4, 
    RADDR3, RADDR2, RADDR1, RADDR0, RCLKE, RCLK, RE, WCLKE, output RDATA15, 
    RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, RDATA8, RDATA7, 
    RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );
  wire   GNDI;

  EBR_B_B \my_pattern_gen/piece_device/curr_piece_shape_15__I_0 ( 
    .RADDR10(GNDI), .RADDR9(GNDI), .RADDR8(GNDI), .RADDR7(GNDI), .RADDR6(GNDI), 
    .RADDR5(GNDI), .RADDR4(RADDR4), .RADDR3(RADDR3), .RADDR2(RADDR2), 
    .RADDR1(RADDR1), .RADDR0(RADDR0), .WADDR10(GNDI), .WADDR9(GNDI), 
    .WADDR8(GNDI), .WADDR7(GNDI), .WADDR6(GNDI), .WADDR5(GNDI), .WADDR4(GNDI), 
    .WADDR3(GNDI), .WADDR2(GNDI), .WADDR1(GNDI), .WADDR0(GNDI), 
    .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), .MASK_N12(GNDI), 
    .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), .MASK_N8(GNDI), 
    .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), .MASK_N4(GNDI), 
    .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), .MASK_N0(GNDI), 
    .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), .WDATA12(GNDI), 
    .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), .WDATA8(GNDI), 
    .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), .WDATA3(GNDI), 
    .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), .RCLKE(RCLKE), .RCLK(RCLK), 
    .RE(RE), .WCLKE(WCLKE), .WCLK(GNDI), .WE(GNDI), .RDATA15(RDATA15), 
    .RDATA14(RDATA14), .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), 
    .RDATA10(RDATA10), .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), 
    .RDATA6(RDATA6), .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), 
    .RDATA2(RDATA2), .RDATA1(RDATA1), .RDATA0(RDATA0));
  gnd DRIVEGND( .PWR0(GNDI));
endmodule

module EBR_B_B ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, 
    RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, 
    WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_W = "16";
  defparam INST10.DATA_WIDTH_R = "16";

    defparam INST10.INIT_0 = "0x4620360046203600C8808E0044C0E20088C02E00C440E8000F0044440F004444";

    defparam INST10.INIT_1 = "0xFFFFFFFFFFFFFFFF660066006600660046404E004C400E402640C6002640C600";

    defparam INST10.INIT_2 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_3 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_4 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_5 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_6 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_7 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_8 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_9 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_A = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_B = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_C = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_D = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_E = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_F = "0x0000000000000000000000000000000000000000000000000000000000000000";
endmodule

module my_pll_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \my_pll/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module ctrlr_data ( output PADDI, input ctrlr_data );
  wire   GNDI;

  BB_B_B \ctrlr_data_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(ctrlr_data));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (ctrlr_data => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module test_input ( output PADDI, input test_input );
  wire   GNDI;

  BB_B_B \test_output_c_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(test_input));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (test_input => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module osc ( output PADDI, input osc );
  wire   GNDI;

  BB_B_B \osc_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(osc));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (osc => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module rotate_out ( input PADDO, output rotate_out );
  wire   VCCI;

  BB_B_B \rotate_out_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rotate_out));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rotate_out) = (0:0:0,0:0:0);
  endspecify

endmodule

module test_output ( input PADDO, output test_output );
  wire   VCCI;

  BB_B_B \test_output_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(test_output));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => test_output) = (0:0:0,0:0:0);
  endspecify

endmodule

module ctrlr_clk ( input PADDO, output ctrlr_clk );
  wire   VCCI;

  BB_B_B \ctrlr_clk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(ctrlr_clk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ctrlr_clk) = (0:0:0,0:0:0);
  endspecify

endmodule

module ctrlr_latch ( input PADDO, output ctrlr_latch );
  wire   VCCI;

  BB_B_B \ctrlr_latch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(ctrlr_latch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => ctrlr_latch) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk_test ( input PADDO, output clk_test );
  wire   VCCI;

  BB_B_B \clk_test_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(clk_test));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => clk_test) = (0:0:0,0:0:0);
  endspecify

endmodule

module vsync ( input PADDO, output vsync );
  wire   VCCI;

  BB_B_B \vsync_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(vsync));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => vsync) = (0:0:0,0:0:0);
  endspecify

endmodule

module hsync ( input PADDO, output hsync );
  wire   VCCI;

  BB_B_B \hsync_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(hsync));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => hsync) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_0_ ( input PADDO, output rgb0 );
  wire   VCCI;

  BB_B_B \rgb_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb0) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_1_ ( input PADDO, output rgb1 );
  wire   VCCI;

  BB_B_B \rgb_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_2_ ( input PADDO, output rgb2 );
  wire   VCCI;

  BB_B_B \rgb_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb2) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_3_ ( input PADDO, output rgb3 );
  wire   VCCI;

  BB_B_B \rgb_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb3) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_4_ ( input PADDO, output rgb4 );
  wire   VCCI;

  BB_B_B \rgb_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb4) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_5_ ( input PADDO, output rgb5 );
  wire   VCCI;

  BB_B_B \rgb_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb5) = (0:0:0,0:0:0);
  endspecify

endmodule
