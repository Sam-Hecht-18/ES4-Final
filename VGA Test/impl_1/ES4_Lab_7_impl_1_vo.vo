
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o ES4_Lab_7_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui ES4_Lab_7_impl_1.udb 
// Netlist created on Mon Nov 27 20:46:01 2023
// Netlist written on Mon Nov 27 20:46:04 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module master ( hsync, vsync, osc, valid_test, clk_test, rgb );
  input  osc;
  output hsync, vsync, valid_test, clk_test;
  output [5:0] rgb;
  wire   \my_vga.next_row[9] , \my_vga.n1067 , \my_vga.next_row_9__N_67 , 
         \row[9] , \my_vga.col_0__N_26 , \my_vga.row_0__N_16 , outglobal_o, 
         \my_vga.n1082 , \col[6] , \my_vga.next_col_5__N_45 , \col[5] , 
         \my_vga.next_col[5] , \my_vga.next_col[6] , \my_vga.next_col_7__N_37 , 
         \my_vga.next_row[8] , \my_vga.n1064 , \row[8] , 
         \my_vga.next_row_7__N_75 , \row[7] , \my_vga.next_row[7] , 
         \my_vga.next_col[3] , \my_vga.n1079 , \my_vga.col[4]_2 , 
         \my_vga.next_col_3__N_53 , \my_vga.col[3]_2 , \my_vga.next_col[4] , 
         \my_vga.n1061 , \row[6] , \my_vga.next_row_5__N_83 , \row[5] , 
         \my_vga.next_row[5] , \my_vga.next_row[6] , \my_vga.next_col[9] , 
         \my_vga.n1088 , \my_vga.next_col_9__N_29 , \col[9] , 
         \my_vga.next_row[3] , \my_vga.n1058 , \my_vga.row[4]_2 , 
         \my_vga.next_row_3__N_91 , \my_vga.row[3]_2 , \my_vga.next_row[4] , 
         \my_vga.next_col[2] , \my_vga.next_col[1] , \my_vga.n1076 , 
         \my_vga.col[2]_2 , \my_vga.next_col_1__N_61 , \my_vga.col[1]_2 , 
         \my_vga.next_row[0] , \my_vga.n1052 , \rgb_pad[0].vcc , 
         \my_vga.row[0]_2 , \my_vga.next_row_1__N_99 , \my_vga.next_row[2] , 
         \my_vga.next_row[1] , \my_vga.n1055 , \my_vga.row[2]_2 , 
         \my_vga.row[1]_2 , \my_vga.next_col[8] , \my_vga.n1085 , \col[8] , 
         \col[7] , \my_vga.next_col[7] , \my_vga.next_col[0] , \my_vga.n1073 , 
         \my_vga.col[0]_2 , \row_7__N_5[5]$n6 , \row_7__N_5[6]$n1 , 
         \my_vga.n19 , \col_7__N_19[5]$n4 , \col_7__N_19[6]$n3 , \my_vga.n722 , 
         \my_vga.n8 , \my_vga.n267 , \my_vga.valid_test_c_N_118 , \my_vga.n10 , 
         \my_vga.vsync_c_N_116 , n763, vsync_c, \row_7__N_5[7] , \my_vga.n766 , 
         \my_vga.n810 , \row_7__N_5[6] , \row_7__N_5[5] , 
         \my_vga.valid_test_c_N_117 , \my_vga.n6 , \my_vga.hsync_c_N_115 , 
         hsync_c, \row_7__N_5[7]$n0 , n7, rgb_c_0_N_114, valid_test_c, 
         \my_pattern_gen.rgb_c_5_N_103[3] , \my_pattern_gen.rgb_c_5_N_103[2] , 
         rgb_c_2, rgb_c_3, \my_pattern_gen.rgb_c_5_N_103[4] , 
         \my_pattern_gen.rgb_c_5_N_103[5] , rgb_c_5, rgb_c_4, 
         \my_pattern_gen.rgb_c_5_N_103[0] , \my_pattern_gen.rgb_c_5_N_103[1] , 
         rgb_c_1, rgb_c_0, \row_7__N_5[4]$n7 , \row_7__N_5[4] , 
         \col_7__N_19[7]$n2 , \col_7__N_19[7] , \col_7__N_19[6] , 
         \col_7__N_19[5] , \col_7__N_19[4]$n5 , \col_7__N_19[4] , osc_c, 
         \my_pll.lscc_pll_inst.feedback_w , clk_test_c;

  my_vga_SLICE_0 \my_vga.SLICE_0 ( .DI0(\my_vga.next_row[9] ), 
    .D1(\my_vga.n1067 ), .D0(\my_vga.next_row_9__N_67 ), .B0(\row[9] ), 
    .CE(\my_vga.col_0__N_26 ), .LSR(\my_vga.row_0__N_16 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.next_row_9__N_67 ), .CIN1(\my_vga.n1067 ), .Q0(\row[9] ), 
    .F0(\my_vga.next_row[9] ), .COUT0(\my_vga.n1067 ));
  my_vga_SLICE_1 \my_vga.SLICE_1 ( .D1(\my_vga.n1082 ), .B1(\col[6] ), 
    .D0(\my_vga.next_col_5__N_45 ), .B0(\col[5] ), 
    .CIN0(\my_vga.next_col_5__N_45 ), .CIN1(\my_vga.n1082 ), 
    .F0(\my_vga.next_col[5] ), .F1(\my_vga.next_col[6] ), 
    .COUT1(\my_vga.next_col_7__N_37 ), .COUT0(\my_vga.n1082 ));
  my_vga_SLICE_2 \my_vga.SLICE_2 ( .DI1(\my_vga.next_row[8] ), 
    .D1(\my_vga.n1064 ), .B1(\row[8] ), .D0(\my_vga.next_row_7__N_75 ), 
    .B0(\row[7] ), .CE(\my_vga.col_0__N_26 ), .LSR(\my_vga.row_0__N_16 ), 
    .CLK(outglobal_o), .CIN0(\my_vga.next_row_7__N_75 ), .CIN1(\my_vga.n1064 ), 
    .Q1(\row[8] ), .F0(\my_vga.next_row[7] ), .F1(\my_vga.next_row[8] ), 
    .COUT1(\my_vga.next_row_9__N_67 ), .COUT0(\my_vga.n1064 ));
  my_vga_SLICE_3 \my_vga.SLICE_3 ( .DI0(\my_vga.next_col[3] ), 
    .D1(\my_vga.n1079 ), .B1(\my_vga.col[4]_2 ), 
    .D0(\my_vga.next_col_3__N_53 ), .B0(\my_vga.col[3]_2 ), 
    .LSR(\my_vga.col_0__N_26 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.next_col_3__N_53 ), .CIN1(\my_vga.n1079 ), 
    .Q0(\my_vga.col[3]_2 ), .F0(\my_vga.next_col[3] ), 
    .F1(\my_vga.next_col[4] ), .COUT1(\my_vga.next_col_5__N_45 ), 
    .COUT0(\my_vga.n1079 ));
  my_vga_SLICE_4 \my_vga.SLICE_4 ( .D1(\my_vga.n1061 ), .B1(\row[6] ), 
    .D0(\my_vga.next_row_5__N_83 ), .B0(\row[5] ), 
    .CIN0(\my_vga.next_row_5__N_83 ), .CIN1(\my_vga.n1061 ), 
    .F0(\my_vga.next_row[5] ), .F1(\my_vga.next_row[6] ), 
    .COUT1(\my_vga.next_row_7__N_75 ), .COUT0(\my_vga.n1061 ));
  my_vga_SLICE_5 \my_vga.SLICE_5 ( .DI0(\my_vga.next_col[9] ), 
    .D1(\my_vga.n1088 ), .D0(\my_vga.next_col_9__N_29 ), .B0(\col[9] ), 
    .LSR(\my_vga.col_0__N_26 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.next_col_9__N_29 ), .CIN1(\my_vga.n1088 ), .Q0(\col[9] ), 
    .F0(\my_vga.next_col[9] ), .COUT0(\my_vga.n1088 ));
  my_vga_SLICE_6 \my_vga.SLICE_6 ( .DI0(\my_vga.next_row[3] ), 
    .D1(\my_vga.n1058 ), .B1(\my_vga.row[4]_2 ), 
    .D0(\my_vga.next_row_3__N_91 ), .B0(\my_vga.row[3]_2 ), 
    .CE(\my_vga.col_0__N_26 ), .LSR(\my_vga.row_0__N_16 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.next_row_3__N_91 ), .CIN1(\my_vga.n1058 ), 
    .Q0(\my_vga.row[3]_2 ), .F0(\my_vga.next_row[3] ), 
    .F1(\my_vga.next_row[4] ), .COUT1(\my_vga.next_row_5__N_83 ), 
    .COUT0(\my_vga.n1058 ));
  my_vga_SLICE_7 \my_vga.SLICE_7 ( .DI1(\my_vga.next_col[2] ), 
    .DI0(\my_vga.next_col[1] ), .D1(\my_vga.n1076 ), .B1(\my_vga.col[2]_2 ), 
    .D0(\my_vga.next_col_1__N_61 ), .B0(\my_vga.col[1]_2 ), 
    .LSR(\my_vga.col_0__N_26 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.next_col_1__N_61 ), .CIN1(\my_vga.n1076 ), 
    .Q0(\my_vga.col[1]_2 ), .Q1(\my_vga.col[2]_2 ), .F0(\my_vga.next_col[1] ), 
    .F1(\my_vga.next_col[2] ), .COUT1(\my_vga.next_col_3__N_53 ), 
    .COUT0(\my_vga.n1076 ));
  my_vga_SLICE_8 \my_vga.SLICE_8 ( .DI1(\my_vga.next_row[0] ), 
    .D1(\my_vga.n1052 ), .C1(\rgb_pad[0].vcc ), .B1(\my_vga.row[0]_2 ), 
    .CE(\my_vga.col_0__N_26 ), .LSR(\my_vga.row_0__N_16 ), .CLK(outglobal_o), 
    .CIN1(\my_vga.n1052 ), .Q1(\my_vga.row[0]_2 ), .F1(\my_vga.next_row[0] ), 
    .COUT1(\my_vga.next_row_1__N_99 ), .COUT0(\my_vga.n1052 ));
  my_vga_SLICE_9 \my_vga.SLICE_9 ( .DI1(\my_vga.next_row[2] ), 
    .DI0(\my_vga.next_row[1] ), .D1(\my_vga.n1055 ), .B1(\my_vga.row[2]_2 ), 
    .D0(\my_vga.next_row_1__N_99 ), .B0(\my_vga.row[1]_2 ), 
    .CE(\my_vga.col_0__N_26 ), .LSR(\my_vga.row_0__N_16 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.next_row_1__N_99 ), .CIN1(\my_vga.n1055 ), 
    .Q0(\my_vga.row[1]_2 ), .Q1(\my_vga.row[2]_2 ), .F0(\my_vga.next_row[1] ), 
    .F1(\my_vga.next_row[2] ), .COUT1(\my_vga.next_row_3__N_91 ), 
    .COUT0(\my_vga.n1055 ));
  my_vga_SLICE_10 \my_vga.SLICE_10 ( .DI1(\my_vga.next_col[8] ), 
    .D1(\my_vga.n1085 ), .B1(\col[8] ), .D0(\my_vga.next_col_7__N_37 ), 
    .B0(\col[7] ), .LSR(\my_vga.col_0__N_26 ), .CLK(outglobal_o), 
    .CIN0(\my_vga.next_col_7__N_37 ), .CIN1(\my_vga.n1085 ), .Q1(\col[8] ), 
    .F0(\my_vga.next_col[7] ), .F1(\my_vga.next_col[8] ), 
    .COUT1(\my_vga.next_col_9__N_29 ), .COUT0(\my_vga.n1085 ));
  my_vga_SLICE_11 \my_vga.SLICE_11 ( .DI1(\my_vga.next_col[0] ), 
    .D1(\my_vga.n1073 ), .C1(\rgb_pad[0].vcc ), .B1(\my_vga.col[0]_2 ), 
    .LSR(\my_vga.col_0__N_26 ), .CLK(outglobal_o), .CIN1(\my_vga.n1073 ), 
    .Q1(\my_vga.col[0]_2 ), .F1(\my_vga.next_col[0] ), 
    .COUT1(\my_vga.next_col_1__N_61 ), .COUT0(\my_vga.n1073 ));
  my_vga_SLICE_13 \my_vga.SLICE_13 ( .DI1(\row_7__N_5[5]$n6 ), 
    .DI0(\row_7__N_5[6]$n1 ), .D1(\my_vga.next_row[5] ), .C1(\row[5] ), 
    .B1(\my_vga.col_0__N_26 ), .A1(\my_vga.n19 ), .D0(\my_vga.next_row[6] ), 
    .C0(\row[6] ), .B0(\my_vga.n19 ), .A0(\my_vga.col_0__N_26 ), 
    .CLK(outglobal_o), .Q0(\row[6] ), .Q1(\row[5] ), .F0(\row_7__N_5[6]$n1 ), 
    .F1(\row_7__N_5[5]$n6 ));
  my_vga_SLICE_15 \my_vga.SLICE_15 ( .DI1(\col_7__N_19[5]$n4 ), 
    .DI0(\col_7__N_19[6]$n3 ), .D1(\my_vga.next_col[5] ), 
    .B1(\my_vga.col_0__N_26 ), .D0(\my_vga.next_col[6] ), 
    .C0(\my_vga.col_0__N_26 ), .CLK(outglobal_o), .Q0(\col[6] ), .Q1(\col[5] ), 
    .F0(\col_7__N_19[6]$n3 ), .F1(\col_7__N_19[5]$n4 ));
  my_vga_SLICE_20 \my_vga.SLICE_20 ( .D1(\row[5] ), .C1(\my_vga.n722 ), 
    .B1(\my_vga.n8 ), .D0(\my_vga.n267 ), .C0(\my_vga.row[2]_2 ), 
    .B0(\my_vga.row[3]_2 ), .A0(\my_vga.row[0]_2 ), .F0(\my_vga.n722 ), 
    .F1(\my_vga.valid_test_c_N_118 ));
  my_vga_SLICE_21 \my_vga.SLICE_21 ( .D1(\my_vga.row[3]_2 ), 
    .C1(\my_vga.n267 ), .B1(\row[9] ), .A1(\my_vga.row[0]_2 ), 
    .D0(\my_vga.row[1]_2 ), .C0(\my_vga.row[4]_2 ), .F0(\my_vga.n267 ), 
    .F1(\my_vga.n10 ));
  my_vga_SLICE_23 \my_vga.SLICE_23 ( .D1(\my_vga.vsync_c_N_116 ), 
    .C1(\my_vga.row[4]_2 ), .B1(\row[9] ), .A1(\my_vga.row[2]_2 ), 
    .D0(\my_vga.row[2]_2 ), .C0(\my_vga.col_0__N_26 ), .B0(\my_vga.n10 ), 
    .A0(n763), .F0(\my_vga.row_0__N_16 ), .F1(vsync_c));
  my_vga_SLICE_24 \my_vga.SLICE_24 ( .D1(\row[7] ), .C1(\my_vga.n19 ), 
    .B1(\my_vga.col_0__N_26 ), .A1(\my_vga.next_row[7] ), .D0(n763), 
    .C0(\my_vga.n10 ), .B0(\my_vga.row[2]_2 ), .F0(\my_vga.n19 ), 
    .F1(\row_7__N_5[7] ));
  my_vga_SLICE_25 \my_vga.SLICE_25 ( .D1(\my_vga.n766 ), .C1(\my_vga.n810 ), 
    .B1(\col[7] ), .A1(\col[9] ), .D0(\col[8] ), .C0(\col[5] ), 
    .F0(\my_vga.n810 ), .F1(\my_vga.col_0__N_26 ));
  my_vga_SLICE_27 \my_vga.SLICE_27 ( .D1(\row[5] ), .C1(\my_vga.n8 ), 
    .B1(\my_vga.row[3]_2 ), .A1(\my_vga.row[1]_2 ), .D0(\row[6] ), 
    .C0(\row[8] ), .B0(\row[7] ), .F0(\my_vga.n8 ), 
    .F1(\my_vga.vsync_c_N_116 ));
  my_vga_SLICE_28 \my_vga.SLICE_28 ( .D1(\my_vga.next_row[5] ), .C1(\row[5] ), 
    .B1(\my_vga.col_0__N_26 ), .A1(\my_vga.n19 ), .D0(\my_vga.next_row[6] ), 
    .C0(\my_vga.col_0__N_26 ), .B0(\my_vga.n19 ), .A0(\row[6] ), 
    .F0(\row_7__N_5[6] ), .F1(\row_7__N_5[5] ));
  my_vga_SLICE_30 \my_vga.SLICE_30 ( .D0(\col[7] ), .C0(\my_vga.n766 ), 
    .B0(\col[8] ), .A0(\col[5] ), .F0(\my_vga.valid_test_c_N_117 ));
  my_vga_SLICE_31 \my_vga.SLICE_31 ( .D1(\my_vga.col[2]_2 ), .C1(\my_vga.n6 ), 
    .B1(\my_vga.col[3]_2 ), .A1(\my_vga.col[0]_2 ), .D0(\my_vga.col[1]_2 ), 
    .C0(\my_vga.col[4]_2 ), .B0(\col[6] ), .F0(\my_vga.n6 ), 
    .F1(\my_vga.n766 ));
  my_vga_SLICE_32 \my_vga.SLICE_32 ( .D1(\col[7] ), 
    .C1(\my_vga.hsync_c_N_115 ), .B1(\col[8] ), .A1(\col[9] ), .D0(\col[6] ), 
    .C0(\my_vga.col[4]_2 ), .B0(\col[5] ), .F0(\my_vga.hsync_c_N_115 ), 
    .F1(hsync_c));
  SLICE_36 SLICE_36( .DI1(\row_7__N_5[7]$n0 ), .D1(\my_vga.n19 ), 
    .C1(\my_vga.next_row[7] ), .B1(\my_vga.col_0__N_26 ), .A1(\row[7] ), 
    .D0(\row[6] ), .C0(\row[8] ), .B0(\row[7] ), .A0(\row[5] ), 
    .CLK(outglobal_o), .Q1(\row[7] ), .F0(n763), .F1(\row_7__N_5[7]$n0 ));
  SLICE_37 SLICE_37( .D1(\col[8] ), .C1(n7), .B1(n763), .A1(\row[9] ), 
    .D0(\col[6] ), .C0(\col[7] ), .B0(\col[5] ), .A0(\col[9] ), .F0(n7), 
    .F1(rgb_c_0_N_114));
  my_vga_SLICE_40 \my_vga.SLICE_40 ( .D0(\my_vga.valid_test_c_N_117 ), 
    .C0(\my_vga.valid_test_c_N_118 ), .B0(\row[9] ), .A0(\col[9] ), 
    .F0(valid_test_c));
  my_pattern_gen_SLICE_42 \my_pattern_gen.SLICE_42 ( 
    .D1(\my_pattern_gen.rgb_c_5_N_103[3] ), .C1(rgb_c_0_N_114), 
    .D0(\my_pattern_gen.rgb_c_5_N_103[2] ), .C0(rgb_c_0_N_114), .F0(rgb_c_2), 
    .F1(rgb_c_3));
  my_pattern_gen_SLICE_44 \my_pattern_gen.SLICE_44 ( 
    .C1(\my_pattern_gen.rgb_c_5_N_103[4] ), .A1(rgb_c_0_N_114), 
    .D0(\my_pattern_gen.rgb_c_5_N_103[5] ), .B0(rgb_c_0_N_114), .F0(rgb_c_5), 
    .F1(rgb_c_4));
  my_pattern_gen_SLICE_46 \my_pattern_gen.SLICE_46 ( 
    .D1(\my_pattern_gen.rgb_c_5_N_103[0] ), .C1(rgb_c_0_N_114), 
    .D0(\my_pattern_gen.rgb_c_5_N_103[1] ), .B0(rgb_c_0_N_114), .F0(rgb_c_1), 
    .F1(rgb_c_0));
  my_vga_SLICE_49 \my_vga.SLICE_49 ( .DI1(\row_7__N_5[4]$n7 ), 
    .D1(\my_vga.row[4]_2 ), .C1(\my_vga.next_row[4] ), .B1(\my_vga.n19 ), 
    .A1(\my_vga.col_0__N_26 ), .D0(\my_vga.next_row[4] ), 
    .C0(\my_vga.row[4]_2 ), .B0(\my_vga.col_0__N_26 ), .A0(\my_vga.n19 ), 
    .CLK(outglobal_o), .Q1(\my_vga.row[4]_2 ), .F0(\row_7__N_5[4] ), 
    .F1(\row_7__N_5[4]$n7 ));
  my_vga_SLICE_50 \my_vga.SLICE_50 ( .DI1(\col_7__N_19[7]$n2 ), 
    .D1(\my_vga.next_col[7] ), .C1(\my_vga.col_0__N_26 ), 
    .D0(\my_vga.col_0__N_26 ), .C0(\my_vga.next_col[7] ), .CLK(outglobal_o), 
    .Q1(\col[7] ), .F0(\col_7__N_19[7] ), .F1(\col_7__N_19[7]$n2 ));
  my_vga_SLICE_51 \my_vga.SLICE_51 ( .D1(\my_vga.next_col[5] ), 
    .B1(\my_vga.col_0__N_26 ), .D0(\my_vga.next_col[6] ), 
    .C0(\my_vga.col_0__N_26 ), .F0(\col_7__N_19[6] ), .F1(\col_7__N_19[5] ));
  my_vga_SLICE_53 \my_vga.SLICE_53 ( .DI1(\col_7__N_19[4]$n5 ), 
    .D1(\my_vga.next_col[4] ), .C1(\my_vga.col_0__N_26 ), 
    .D0(\my_vga.col_0__N_26 ), .C0(\my_vga.next_col[4] ), .CLK(outglobal_o), 
    .Q1(\my_vga.col[4]_2 ), .F0(\col_7__N_19[4] ), .F1(\col_7__N_19[4]$n5 ));
  rgb_pad_0__SLICE_54 \rgb_pad[0].SLICE_54 ( .F0(\rgb_pad[0].vcc ));
  my_pattern_gen_mux_9 \my_pattern_gen.mux_9 ( .RADDR7(\row_7__N_5[7] ), 
    .RADDR6(\row_7__N_5[6] ), .RADDR5(\row_7__N_5[5] ), 
    .RADDR4(\row_7__N_5[4] ), .RADDR3(\col_7__N_19[7] ), 
    .RADDR2(\col_7__N_19[6] ), .RADDR1(\col_7__N_19[5] ), 
    .RADDR0(\col_7__N_19[4] ), .RCLKE(\rgb_pad[0].vcc ), .RCLK(outglobal_o), 
    .RE(\rgb_pad[0].vcc ), .WCLKE(\rgb_pad[0].vcc ), 
    .RDATA10(\my_pattern_gen.rgb_c_5_N_103[5] ), 
    .RDATA8(\my_pattern_gen.rgb_c_5_N_103[4] ), 
    .RDATA6(\my_pattern_gen.rgb_c_5_N_103[3] ), 
    .RDATA4(\my_pattern_gen.rgb_c_5_N_103[2] ), 
    .RDATA2(\my_pattern_gen.rgb_c_5_N_103[1] ), 
    .RDATA0(\my_pattern_gen.rgb_c_5_N_103[0] ));
  my_pll_lscc_pll_inst_u_PLL_B \my_pll.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(osc_c), .FEEDBACK(\my_pll.lscc_pll_inst.feedback_w ), 
    .RESET_N(\rgb_pad[0].vcc ), .INTFBOUT(\my_pll.lscc_pll_inst.feedback_w ), 
    .OUTCORE(clk_test_c), .OUTGLOBAL(outglobal_o));
  rgb_0_ \rgb[0]_I ( .PADDO(rgb_c_0), .rgb0(rgb[0]));
  hsync hsync_I( .PADDO(hsync_c), .hsync(hsync));
  rgb_1_ \rgb[1]_I ( .PADDO(rgb_c_1), .rgb1(rgb[1]));
  rgb_2_ \rgb[2]_I ( .PADDO(rgb_c_2), .rgb2(rgb[2]));
  rgb_3_ \rgb[3]_I ( .PADDO(rgb_c_3), .rgb3(rgb[3]));
  vsync vsync_I( .PADDO(vsync_c), .vsync(vsync));
  rgb_4_ \rgb[4]_I ( .PADDO(rgb_c_4), .rgb4(rgb[4]));
  osc osc_I( .PADDI(osc_c), .osc(osc));
  valid_test valid_test_I( .PADDO(valid_test_c), .valid_test(valid_test));
  clk_test clk_test_I( .PADDO(clk_test_c), .clk_test(clk_test));
  rgb_5_ \rgb[5]_I ( .PADDO(rgb_c_5), .rgb5(rgb[5]));
endmodule

module my_vga_SLICE_0 ( input DI0, D1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \my_vga/next_row_9__I_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_row_9__I_0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module my_vga_SLICE_1 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \my_vga/next_col_6__I_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_vga_SLICE_2 ( input DI1, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \my_vga/next_row_8__I_12 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_row_8__I_0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_3 ( input DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \my_vga/next_col_4__I_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_col_3__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module my_vga_SLICE_4 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, COUT1, 
    COUT0 );
  wire   GNDI;

  fa2 \my_vga/next_row_6__I_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_vga_SLICE_5 ( input DI0, D1, D0, B0, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \my_vga/next_col_9__I_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_col_9__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_6 ( input DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \my_vga/next_row_4__I_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_row_3__I_0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_7 ( input DI1, DI0, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \my_vga/next_col_2__I_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_col_1__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/next_col_2__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_8 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \my_vga/next_row_0__I_14 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/next_row_0__I_0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_9 ( input DI1, DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \my_vga/next_row_2__I_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_row_1__I_0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \my_vga/next_row_2__I_0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_10 ( input DI1, D1, B1, D0, B0, LSR, CLK, CIN0, CIN1, 
    output Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \my_vga/next_col_8__I_8 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/next_col_8__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_11 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \my_vga/next_col_0__I_10 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/next_col_0__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module my_vga_SLICE_13 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \my_vga.SLICE_13_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 \my_vga.SLICE_13_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \my_vga/row_7__I_2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \my_vga/row_7__I_1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xB830") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xD850") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_15 ( input DI1, DI0, D1, B1, D0, C0, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40002 \my_vga.SLICE_15_K1 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 \my_vga.SLICE_15_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \my_vga/col_7__I_5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \my_vga/col_7__I_4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_20 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40004 \my_vga/i4_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40005 \my_vga/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_21 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40006 \my_vga/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 \my_vga/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xF7FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_23 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40008 \my_vga/row_4__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 \my_vga.i711_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_24 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40010 \my_vga/i467_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \my_vga/i5_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xB380") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF3") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_25 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40012 \my_vga/i709_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \my_vga/i627_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_27 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40014 \my_vga/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \my_vga/i3_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x7FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_28 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut4 \my_vga/i465_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 \my_vga/i469_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xCA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_30 ( input D0, C0, B0, A0, output F0 );

  lut40017 \my_vga/i364_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFECC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_31 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40018 \my_vga/i1_4_lut_adj_20 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 \my_vga/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_32 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40020 \my_vga/col_9__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40021 \my_vga/i34_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xDFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x3FFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_36 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output Q1, 
    F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40022 SLICE_36_K1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \my_vga/row_7__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xE222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_37 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40024 i4_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xFAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_40 ( input D0, C0, B0, A0, output F0 );

  lut40026 \my_vga/row_9__I_0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x0103") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_42 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40027 \my_pattern_gen/rgb_c_5_I_16 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 \my_pattern_gen/rgb_c_5_I_17 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_44 ( input C1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40028 \my_pattern_gen/rgb_c_5_I_15 ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \my_pattern_gen/rgb_c_5_I_0 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_SLICE_46 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40027 \my_pattern_gen/rgb_c_5_I_19 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \my_pattern_gen/rgb_c_5_I_18 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_vga_SLICE_49 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  lut40030 \my_vga.SLICE_49_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \my_vga/mux_26_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \my_vga/row_7__I_3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xD580") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xB830") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_50 ( input DI1, D1, C1, D0, C0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40027 \my_vga.SLICE_50_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \my_vga/i334_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \my_vga/col_7__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_vga_SLICE_51 ( input D1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40002 \my_vga/i336_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 \my_vga/i335_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module my_vga_SLICE_53 ( input DI1, D1, C1, D0, C0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40027 \my_vga.SLICE_53_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \my_vga/i300_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre2 \my_vga/col_7__I_6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module rgb_pad_0__SLICE_54 ( output F0 );
  wire   GNDI;

  lut40033 \rgb_pad[0].vhi_inst ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module my_pattern_gen_mux_9 ( input RADDR7, RADDR6, RADDR5, RADDR4, RADDR3, 
    RADDR2, RADDR1, RADDR0, RCLKE, RCLK, RE, WCLKE, output RDATA10, RDATA8, 
    RDATA6, RDATA4, RDATA2, RDATA0 );
  wire   GNDI;

  EBR_B_B \my_pattern_gen/mux_9 ( .RADDR10(GNDI), .RADDR9(GNDI), .RADDR8(GNDI), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(GNDI), .WADDR9(GNDI), .WADDR8(GNDI), .WADDR7(GNDI), .WADDR6(GNDI), 
    .WADDR5(GNDI), .WADDR4(GNDI), .WADDR3(GNDI), .WADDR2(GNDI), .WADDR1(GNDI), 
    .WADDR0(GNDI), .MASK_N15(GNDI), .MASK_N14(GNDI), .MASK_N13(GNDI), 
    .MASK_N12(GNDI), .MASK_N11(GNDI), .MASK_N10(GNDI), .MASK_N9(GNDI), 
    .MASK_N8(GNDI), .MASK_N7(GNDI), .MASK_N6(GNDI), .MASK_N5(GNDI), 
    .MASK_N4(GNDI), .MASK_N3(GNDI), .MASK_N2(GNDI), .MASK_N1(GNDI), 
    .MASK_N0(GNDI), .WDATA15(GNDI), .WDATA14(GNDI), .WDATA13(GNDI), 
    .WDATA12(GNDI), .WDATA11(GNDI), .WDATA10(GNDI), .WDATA9(GNDI), 
    .WDATA8(GNDI), .WDATA7(GNDI), .WDATA6(GNDI), .WDATA5(GNDI), .WDATA4(GNDI), 
    .WDATA3(GNDI), .WDATA2(GNDI), .WDATA1(GNDI), .WDATA0(GNDI), .RCLKE(RCLKE), 
    .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), .WCLK(GNDI), .WE(GNDI), .RDATA15(), 
    .RDATA14(), .RDATA13(), .RDATA12(), .RDATA11(), .RDATA10(RDATA10), 
    .RDATA9(), .RDATA8(RDATA8), .RDATA7(), .RDATA6(RDATA6), .RDATA5(), 
    .RDATA4(RDATA4), .RDATA3(), .RDATA2(RDATA2), .RDATA1(), .RDATA0(RDATA0));
  gnd DRIVEGND( .PWR0(GNDI));
endmodule

module EBR_B_B ( input RADDR10, RADDR9, RADDR8, RADDR7, RADDR6, RADDR5, RADDR4, 
    RADDR3, RADDR2, RADDR1, RADDR0, WADDR10, WADDR9, WADDR8, WADDR7, WADDR6, 
    WADDR5, WADDR4, WADDR3, WADDR2, WADDR1, WADDR0, MASK_N15, MASK_N14, 
    MASK_N13, MASK_N12, MASK_N11, MASK_N10, MASK_N9, MASK_N8, MASK_N7, MASK_N6, 
    MASK_N5, MASK_N4, MASK_N3, MASK_N2, MASK_N1, MASK_N0, WDATA15, WDATA14, 
    WDATA13, WDATA12, WDATA11, WDATA10, WDATA9, WDATA8, WDATA7, WDATA6, WDATA5, 
    WDATA4, WDATA3, WDATA2, WDATA1, WDATA0, RCLKE, RCLK, RE, WCLKE, WCLK, WE, 
    output RDATA15, RDATA14, RDATA13, RDATA12, RDATA11, RDATA10, RDATA9, 
    RDATA8, RDATA7, RDATA6, RDATA5, RDATA4, RDATA3, RDATA2, RDATA1, RDATA0 );

  EBR_B INST10( .RADDR10(RADDR10), .RADDR9(RADDR9), .RADDR8(RADDR8), 
    .RADDR7(RADDR7), .RADDR6(RADDR6), .RADDR5(RADDR5), .RADDR4(RADDR4), 
    .RADDR3(RADDR3), .RADDR2(RADDR2), .RADDR1(RADDR1), .RADDR0(RADDR0), 
    .WADDR10(WADDR10), .WADDR9(WADDR9), .WADDR8(WADDR8), .WADDR7(WADDR7), 
    .WADDR6(WADDR6), .WADDR5(WADDR5), .WADDR4(WADDR4), .WADDR3(WADDR3), 
    .WADDR2(WADDR2), .WADDR1(WADDR1), .WADDR0(WADDR0), .MASK_N15(MASK_N15), 
    .MASK_N14(MASK_N14), .MASK_N13(MASK_N13), .MASK_N12(MASK_N12), 
    .MASK_N11(MASK_N11), .MASK_N10(MASK_N10), .MASK_N9(MASK_N9), 
    .MASK_N8(MASK_N8), .MASK_N7(MASK_N7), .MASK_N6(MASK_N6), .MASK_N5(MASK_N5), 
    .MASK_N4(MASK_N4), .MASK_N3(MASK_N3), .MASK_N2(MASK_N2), .MASK_N1(MASK_N1), 
    .MASK_N0(MASK_N0), .WDATA15(WDATA15), .WDATA14(WDATA14), .WDATA13(WDATA13), 
    .WDATA12(WDATA12), .WDATA11(WDATA11), .WDATA10(WDATA10), .WDATA9(WDATA9), 
    .WDATA8(WDATA8), .WDATA7(WDATA7), .WDATA6(WDATA6), .WDATA5(WDATA5), 
    .WDATA4(WDATA4), .WDATA3(WDATA3), .WDATA2(WDATA2), .WDATA1(WDATA1), 
    .WDATA0(WDATA0), .RCLKE(RCLKE), .RCLK(RCLK), .RE(RE), .WCLKE(WCLKE), 
    .WCLK(WCLK), .WE(WE), .RDATA15(RDATA15), .RDATA14(RDATA14), 
    .RDATA13(RDATA13), .RDATA12(RDATA12), .RDATA11(RDATA11), .RDATA10(RDATA10), 
    .RDATA9(RDATA9), .RDATA8(RDATA8), .RDATA7(RDATA7), .RDATA6(RDATA6), 
    .RDATA5(RDATA5), .RDATA4(RDATA4), .RDATA3(RDATA3), .RDATA2(RDATA2), 
    .RDATA1(RDATA1), .RDATA0(RDATA0));
  defparam INST10.DATA_WIDTH_W = "8";
  defparam INST10.DATA_WIDTH_R = "8";

    defparam INST10.INIT_0 = "0x0000000000000000000000000050005000500005000500050000000000000000";

    defparam INST10.INIT_1 = "0x0000000000000000000000000101015504440555055505550500050005000500";

    defparam INST10.INIT_2 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_3 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_4 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_5 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_6 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_7 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_8 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_9 = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_A = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_B = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_C = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_D = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_E = "0x0000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INIT_F = "0x0000000000000000000000000000000000000000000000000000000000000000";
endmodule

module my_pll_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \my_pll/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.DIVR = "0";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module rgb_0_ ( input PADDO, output rgb0 );
  wire   VCCI;

  BB_B_B \rgb_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb0) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module hsync ( input PADDO, output hsync );
  wire   VCCI;

  BB_B_B \hsync_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(hsync));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => hsync) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_1_ ( input PADDO, output rgb1 );
  wire   VCCI;

  BB_B_B \rgb_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb1) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_2_ ( input PADDO, output rgb2 );
  wire   VCCI;

  BB_B_B \rgb_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb2) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_3_ ( input PADDO, output rgb3 );
  wire   VCCI;

  BB_B_B \rgb_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb3) = (0:0:0,0:0:0);
  endspecify

endmodule

module vsync ( input PADDO, output vsync );
  wire   VCCI;

  BB_B_B \vsync_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(vsync));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => vsync) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_4_ ( input PADDO, output rgb4 );
  wire   VCCI;

  BB_B_B \rgb_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb4) = (0:0:0,0:0:0);
  endspecify

endmodule

module osc ( output PADDI, input osc );
  wire   GNDI;

  BB_B_B \osc_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(osc));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (osc => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module valid_test ( input PADDO, output valid_test );
  wire   VCCI;

  BB_B_B \valid_test_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(valid_test));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => valid_test) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk_test ( input PADDO, output clk_test );
  wire   VCCI;

  BB_B_B \clk_test_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(clk_test));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => clk_test) = (0:0:0,0:0:0);
  endspecify

endmodule

module rgb_5_ ( input PADDO, output rgb5 );
  wire   VCCI;

  BB_B_B \rgb_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(rgb5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => rgb5) = (0:0:0,0:0:0);
  endspecify

endmodule
